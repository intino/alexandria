dsl Konos

use Wizard
use Chat
use DateNavigator
use Kpi
use DocumentEditor
use Eventline
use Reel
use Timeline
use Grid
use DigitalSignature
use AppDirectory
use Layer
use HtmlViewer
use Multiple
use MicroSite
use DynamicTable
use Frame
use Selector
use Location
use User
use Divider
use Dialog
use Dashboard
use Slider
use Map
use SearchBox
use Sorting
use Grouping
use GroupingToolbar
use DownloadSelection
use Download
use Export
use Actionable
use Table
use List
use Block
use Chart
use Date
use Image
use File
use Number
use Text
use Theme
use Schemas

Template(layout=Vertical, modelClass="io.intino.alexandria.schemas.Widget") widgetMold as DynamicLoaded(loadTime=Slow)
	Block(layout=Horizontal Center)
		MaterialIconButton(title="Back", icon="NavigateBefore", format=airRight, visible=false) backTrigger as Action
		Text(value="Widget", format=h3) title
	Text(format=body1) highlightFacets as Multiple(arrangement=Horizontal) Highlighted("white","#679164")
	Text(format=body1 airBottom) description

	Block(layout=Vertical, spacing=DP24)
		Block examples
			Text(value="Examples", format=h5 underline) examplesTitle
			Block textExamples as Conditional > TemplateStamp(template=textExamplesMold) textExamplesMold
			Block numberExamples as Conditional > TemplateStamp(template=numberExamplesMold) numberExamplesMold
			Block fileExamples as Conditional > TemplateStamp(template=fileExamplesMold) fileExamplesMold
			Block imageExamples as Conditional > TemplateStamp(template=imageExamplesMold) imageExamplesMold
			Block dateExamples as Conditional > TemplateStamp(template=dateExamplesMold) dateExamplesMold
			Block multipleExamples as Conditional > TemplateStamp(template=multipleExamplesMold) multipleExamplesMold
			Block chartExamples as Conditional > TemplateStamp(template=chartExamplesMold) chartExamplesMold
			Block blockExamples as Conditional > TemplateStamp(template=blockExamplesMold) blockExamplesMold
			Block listExamples as Conditional > TemplateStamp(template=listExamplesMold) listExamplesMold
			Block tableExamples as Conditional > TemplateStamp(template=tableExamplesMold) tableExamplesMold
			Block dynamicTableExamples as Conditional > TemplateStamp(template=dynamicTableExamplesMold) dynamicTableExamplesMold
			Block gridExamples as Conditional > TemplateStamp(template=gridExamplesMold) gridExamplesMold
			Block mapExamples as Conditional > TemplateStamp(template=mapExamplesMold) mapExamplesMold
			Block downloadExamples as Conditional > TemplateStamp(template=downloadExamplesMold) downloadExamplesMold
			Block downloadSelectionExamples as Conditional > TemplateStamp(template=downloadSelectionExamplesMold) downloadSelectionExamplesMold
			Block exportExamples as Conditional > TemplateStamp(template=exportExamplesMold) exportExamplesMold
			Block actionableExamples as Conditional > TemplateStamp(template=actionableExamplesMold) actionableExamplesMold
			Block groupingExamples as Conditional > TemplateStamp(template=groupingExamplesMold) groupingExamplesMold
			Block groupingToolbarExamples as Conditional > TemplateStamp(template=groupingToolbarExamplesMold) groupingToolbarExamplesMold
			Block sortingExamples as Conditional > TemplateStamp(template=sortingExamplesMold) sortingExamplesMold
			Block searchBoxExamples as Conditional > TemplateStamp(template=searchBoxExamplesMold) searchBoxExamplesMold
			Block sliderExamples as Conditional > TemplateStamp(template=sliderExamplesMold) sliderExamplesMold
			Block dashboardExamples as Conditional > TemplateStamp(template=dashboardExamplesMold) dashboardExamplesMold
			Block appDirectoryExamples as Conditional > TemplateStamp(template=appDirectoryExamplesMold) appDirectoryExamplesMold
			Block digitalSignatureExamples as Conditional > TemplateStamp(template=digitalSignatureExamplesMold) digitalSignatureExamplesMold
			Block dialogExamples as Conditional > TemplateStamp(template=dialogExamplesMold) dialogExamplesMold
			Block layerExamples as Conditional > TemplateStamp(template=layerExamplesMold) layerExamplesMold
			Block dividerExamples as Conditional > TemplateStamp(template=dividerExamplesMold) dividerExamplesMold
			Block userExamples as Conditional > TemplateStamp(template=userExamplesMold) userExamplesMold
			Block locationExamples as Conditional > TemplateStamp(template=locationExamplesMold) locationExamplesMold
			Block selectorExamples as Conditional > TemplateStamp(template=selectorExamplesMold) selectorExamplesMold
			Block wizardExamples as Conditional > TemplateStamp(template=wizardExamplesMold) wizardExamplesMold
			Block frameExamples as Conditional > TemplateStamp(template=frameExamplesMold) frameExamplesMold
			Block microSiteExamples as Conditional > TemplateStamp(template=microSiteExamplesMold) microSiteExamplesMold
			Block htmlViewerExamples as Conditional > TemplateStamp(template=htmlViewerExamplesMold) htmlViewerExamplesMold
			Block dateNavigatorExamples as Conditional > TemplateStamp(template=dateNavigatorExamplesMold) dateNavigatorExamplesMold
			Block timelineExamples as Conditional > TemplateStamp(template=timelineExamplesMold) timelineExamplesMold
			Block eventlineExamples as Conditional > TemplateStamp(template=eventlineExamplesMold) eventlineExamplesMold
			Block reelExamples as Conditional > TemplateStamp(template=reelExamplesMold) reelExamplesMold
			Block documentEditorExamples as Conditional > TemplateStamp(template=documentEditorExamplesMold) documentEditorExamplesMold
			Block kpiExamples as Conditional > TemplateStamp(template=kpiExamplesMold) kpiExamplesMold
			Block chatExamples as Conditional > TemplateStamp(template=chatExamplesMold) chatExamplesMold

		Block facets
			Text(value="Facets", format=h5 underline)
			Text facetsNames
		Block
			Text(value="Properties", format=h5 underline)
			TemplateStamp(template=propertyMold) properties as Multiple(noItemsMessage="no properties")
		Block
			Text(value="Methods", format=h5 underline)
			TemplateStamp(template=methodMold) methods as Multiple(noItemsMessage="no methods")
		Block
			Text(value="Events", format=h5 underline)
			DisplayStamp(display=eventsDisplay) events

Template(modelClass="io.intino.alexandria.schemas.Property", format=airBottom) propertyMold
	Text(format=body2 facetsAbsolute, value="", mode=Uppercase) facets
	Block(layout=Horizontal StartJustified)
		Text(format=h6) name
		Text(format=h6, value=":  ")
		Text(format=h6 widgetType, mode = Lowercase) type
	Text(format=body2, value="") description
	Block(layout=Horizontal)
		Text(format=body2 valuesLabelFormat) valuesLabel
		Text(format=body2 widgetType, value=":  ") valuesSeparator
		Text(format=body2) values

Template(modelClass="io.intino.alexandria.schemas.Method", format=airBottom) methodMold
	Text(format=body2 facetsAbsolute, value="", mode=Uppercase) facets
	Block(layout=Horizontal StartJustified)
		Text(format=h6) name
		Text(format=h6, value="(")
		TemplateStamp(template=methodParamMold) params as Multiple
		Text(format=h6, value=")")
		Text(format=h6, value=":  ")
		Text(format=h6 widgetType, mode = Lowercase) returnType
	Text(format=body2, value="") description

Template(layout=Horizontal, modelClass="io.intino.alexandria.schemas.Parameter") methodParamMold
	Text(format=h6) name
	Text(format=h6, value=": ")
	Text(format=h6) type
	Text(format=h6) comma

Display eventsDisplay
	Notification refresh //as Object(Method) List
