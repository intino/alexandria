def type(accessor)
	package $package+ValidPackage;

    import java.util.List;
    import java.util.ArrayList;
	import io.intino.pandora.exceptions.*;
	import $package+ValidPackage.jmx.$name+firstUpperCase+SnakeCaseToCamelCase~MBean;
    import io.intino.pandora.jmx.JMXClient;

	$schemaImport

	public class $name+firstUpperCase+SnakeCaseToCamelCase~JMXAccessor {

		private $name+firstUpperCase+SnakeCaseToCamelCase~MBean bean;

		public $name+firstUpperCase+SnakeCaseToCamelCase~JMXAccessor(String url, int port) {
			JMXClient server = new JMXClient(url, port);
			JMXClient.JMXConnection connection = server.connect();
			bean = connection.mBean($name+firstUpperCase+SnakeCaseToCamelCase~MBean.class);
		}

		$operation...[$NL$NL]
	}
end

def type(operation)
	public $returnType+firstUpperCase+ReturnTypeFormatter $name+SnakeCaseToCamelCase+firstLowerCase($parameter+signature...[$NL]) {
		return bean != null ? bean.$name+SnakeCaseToCamelCase+firstLowerCase($parameter+name...[$NL]) : null;
	}
end

def type(parameter) trigger(signature)
	$type $name+SnakeCaseToCamelCase+firstLowerCase
end

def type(parameter) trigger(name)
	$name+SnakeCaseToCamelCase+firstLowerCase
end

def type(schemaImport) trigger(schemaImport)
	import $package.schemas.*;
end