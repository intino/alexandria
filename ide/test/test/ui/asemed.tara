dsl Konos

Service ReactWeb as UI(title = "", favicon = "", port = "{port}")
	Resource("/") home as Page(desktop) Main
	Resource("/error") error as Page(root) Main

//Theme theme1
//	Palette
//		Primary("#3f51b5")
//		Secondary("#ff9100")
//		Error("#f44336")
//
//	Style air > Padding("10px 20px")
//

Format h1
Format h2

Template desktop as Desktop //DrawerNavigable(direction=Left, mode=Modal)
	Header
		Image logo
		Block(layout=Horizontal) cabecera
			Text(format=h1) titulo as Editable
			Text(format=h2) subtitulo
			File fichero as Editable
		Selector divisiones as ComboBox
			Text(label="División 1") división1
			Text(label="División 2") división2
		Selector zonas as ComboBox
			Text(label="Zona 1") zona1
			Text(label="Zona 2") zona2
		Block(layout=Horizontal)
			Image photo as Avatar
			Block
				Text fullName
				TaskOperation(label="logout") logout as Link
	Tabs
		Tab dashboard
			Header as BlockContainer(badgeBlock)
			Content as BlockContainer(dashboardBlock)
		Tab(label="criterios")
			Content as CatalogContainer(criteriosCatalog)
//		Tab("características")
//			Content as CatalogContainer(caracteristicasCatalog)

Block badgeBlock as Decorated
//	Param title as TextType
//	Param count as NumberType
	Block(layout=Horizontal)
		Text(format=h1) title
		Block custom
		Badge count

Template root
Component componentA as Decorated
Display displayA

Block dashboardBlock as Decorated
	Block(layout=Horizontal)
		Block(label="criterios técnicos", layout=Horizontal Center CenterJustified) as Paper
			Block tecnicosEnEjecucion as Moldable(mold=criterioBlock)
			Block tecnicosDeshabilitados as Moldable(criterioBlock)
			Block tecnicosAspirantes as Moldable(criterioBlock)
		Block(label="criterios contables", layout=Horizontal Center CenterJustified) as Paper
			Block contables as Multiple Moldable(criterioBlock)
		Block(label="criterios de datos") as Paper
			Block deDatos as Multiple Moldable(criterioBlock)
	Block
		Block(label="operaciones") as Paper
			Block operacionesUltimoMes as Moldable(panelEstadisticas)
			Block operacionesDesdeCreacion as Moldable(panelEstadisticas)
			Block > Chart evolucionOperaciones
		Block(label="resultados") as Paper
			Block resultadosUltimoMes as Moldable(panelEstadisticas)
			Block resultadosDesdeCreacion as Moldable(panelEstadisticas)
			Block > Chart evolucionResultados
		Block(label="rendimiento") as Paper
			Block rendimientoUltimoMes as Moldable(panelEstadisticas)
			Block rendimientoDesdeCreacion as Moldable(panelEstadisticas)
			Block > Chart evolucionRendimiento

Mold(layout=Vertical Center, modelClass = "") criterioBlock
	Text(format=h1) value
	Text(format=h2) label

Mold(layout=Vertical Center, modelClass = "") indicatorBlock
//	Param value as NumberType
//	Param label as TextType
//	Param trend as WordType("PositivoMejor" "PositivoPeor")

	Block(layout=Horizontal Center)
		Text(format=h1) value
		Icon(alexandriaIcon="remove") trend
	Text(format=h2) label

Mold(modelClass = "") panelEstadisticas //as Parameterizable
//	Param label as TextType
//	Param instances as ObjectType(indicatorBlock) //List

	Text(format=h1) label
	Block(layout=Horizontal)
		Block instances as Multiple Moldable(indicatorBlock)


Catalog("criterios") criteriosCatalog as Decorated
//	displays = criterioDialog
	targetClass = "io.intino.example.graph.Criterio"
	noItemsMessage = "No se han definido criterios"

	Events > OnClick > Open(criterioPanel)

	Layout layout //as Horizontal
		Content
			Block drawerBlock as Moldable(criteriosArrangement) Drawer
			Block mainBlock as Moldable(criteriosArrangement)
			Block
				Block(layout=Horizontal)
					TaskOperation(label="Añadir criterio") addCriterio as IconButton("add")
					SearchOperation(label="buscar") searchCriterios as IconButton("search")

				Tabs
					Tab(label="operaciones") > Content as ListContainer(target=criterioOperativoBlock)
					Tab(label="resultados") > Content as ListContainer(target=criterioResultadosBlock)
					Tab(label="rendimiento") > Content as ListContainer(target=criterioRendimientoBlock)

//	Layout layout
//		Sorting rankingSorting
//
//		Content as ListContainer(target=criterioOperativoBlock)
//		Content as GridContainer(target=criterioOperativoBlock)
//		Content as MapContainer(target=criterioOperativoBlock)
//		Content as TableContainer
//			Column("ranking") ranking as BlockContainer(rankingBlock) Sortable(criteriosCatalog.layout.rankingSorting)
//			Column("titulo") titulo as BlockContainer(tituloBlock)
//
Mold(modelClass = "") criteriosArrangement
	Selector selector as ComboBox
		Sorting(label="mejores") rankingSorting
		Sorting(label="recientes") fechaCreacionSorting
		Sorting(label="potencial") potencialSorting

	Grouping(label="tipo") tipo
	Grouping(label="filtro inteligente") filtroInteligente
	Grouping(label="estado") estado
	Grouping(label="división") division
	Grouping(label="total sospechosos") sospechoso
	Grouping(label="total despachados") despachado
	Grouping(label="total positivos") positivo
	Grouping(label="total resueltos") resuelto
	Grouping(label="costo total") costo
	Grouping(label="retorno total") retorno
	Grouping(label="impacto total") impacto

Block criterioOperativoBlock as Target("io.intino.example.graph.Criterio")
	Block(layout=Horizontal)
		Block(layout=Flexible) main
			Text(format=h1) titulo
			Text(format=h2) descripcion
			Tabs
				Tab(label="consulta") > Content as BlockContainer(consultaBlock)
				Tab(label="balance") > Content as BlockContainer(balanceBlock)
		Block left

Block criterioResultadosBlock as Target("io.intino.example.graph.Criterio")
Block criterioRendimientoBlock as Target("io.intino.example.graph.Criterio")

Block criterioPanel
Block criterioDialog as Dialog(title = "Añadir criterio")

Block consultaBlock
Block balanceBlock
Block rankingBlock
Block tituloBlock

Catalog(targetClass = "") caracteristicasCatalog
	Layout layout