def type(request)
	package $package.requests;

	import io.intino.pandora.exceptions.*;
	import $package.*;
	import com.google.gson.Gson;
	import tara.magritte.Graph;
	import io.intino.pandora.jms.RequestConsumer;

	import javax.jms.*;
	$schemaImport

	public class $name+firstUpperCase~Request implements RequestConsumer {

		private Graph graph;

		public $name+firstUpperCase~Request(Graph graph) {
			this.graph = graph;
		}

		public void consume(Session session, Message request) {
			$call
		}

		private $package.actions.$name+firstUpperCase~Action actionFor(Message message) {
			final $package.actions.$name+firstUpperCase~Action action = new $package.actions.$name+firstUpperCase~Action();
			action.graph = this.graph;[
			try {
				$parameter+assign
			} catch (JMSException e) {
				e.printStackTrace();
			}]
			return action;
		}
		[
		private Message responseMessage(Session session, String responseId, $returnType response) {
			try {
				$returnMessageType~Message message = session.create$returnMessageType~Message();
				message.setJMSCorrelationID(responseId);
				$returnMessageType+return
				return message;
			} catch (JMSException e) {
				e.printStackTrace();
				return null;
			}
		}]
	}
end

def attribute(Bytes) trigger(return)
	message.writeBytes(readFile(response));
end

def trigger(return)
	message.set$value(new Gson().toJson(response));
end

def !type(void) trigger(call)
	response(session, replyTo(request), responseMessage(session, idOf(request), actionFor(request).execute()));
end

def trigger(call)
	actionFor(request).execute();
end

def type(parameter & FileData) trigger(assign)
    byte$[] data = new byte$[(int) ((BytesMessage) message).getBodyLength()];
    ((BytesMessage) message).readBytes(data);
	action.$name+SnakeCaseToCamelCase+firstLowerCase = newTemporalFile(data);
end

def type(parameter & objectData) trigger(assign)
	action.$name+SnakeCaseToCamelCase+firstLowerCase = new Gson().fromJson(((TextMessage) message).getText(), $type.class);

end

def type(parameter) trigger(assign)
	action.$name+SnakeCaseToCamelCase+firstLowerCase = message.get$type~Property("$name");
end

def type(schemaImport)
	import $package.schemas.*;
end