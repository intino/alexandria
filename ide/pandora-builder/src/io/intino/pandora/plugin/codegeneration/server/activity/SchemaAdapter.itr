def type(adapters)
	package $package+ValidPackage.schemas;

	public class ActivitySchemaAdapters {

		$schema...[$NL$NL]

	}


end

def type(schema)

	public static $name+firstUpperCase $name+firstLowerCase~FromLayer(tara.magritte.Layer layer) {
		return $name+firstLowerCase~FromNode(layer.node());
	}

	private static $name+firstUpperCase $name+firstLowerCase~FromNode(tara.magritte.Node node) {
		$name+firstUpperCase schema = new $name+firstUpperCase();
		final java.util.Map<String, java.util.List<?>> variables = node.variables();
		variables.put("name", java.util.Collections.singletonList(node.name()));
		variables.put("id", java.util.Collections.singletonList(node.id()));
		[for (String variable : variables.keySet()) {
			$attribute+fromLayer...[$NL]
		}]
		[for (tara.magritte.Node component : node.componentList()) {
			$attribute+componentfromLayer...[$NL]
		}]
		return schema;
	}
end

def type(single & string) !type(member) trigger(fromLayer)
	if (variable.equals("$name+firstLowerCase")) schema.$name+firstLowerCase(($type+FirstUpperCase+typeFormat) variables.get(variable).get(0).toString());
end

def type(single) !type(member) trigger(fromLayer)
	if (variable.equals("$name+firstLowerCase")) schema.$name+firstLowerCase(($type+FirstUpperCase+typeFormat) variables.get(variable).get(0));
end

def type(multiple & string) !type(member) trigger(fromLayer)
	if (variable.equals("$name+FirstLowerCase")) schema.$name+firstLowerCase().add((($type+FirstUpperCase+typeFormat) variables.get(variable).get(0).toString()));
end

def type(multiple) !type(member) trigger(fromLayer)
	if (variable.equals("$name+FirstLowerCase")) schema.$name+firstLowerCase().add((($type+FirstUpperCase+typeFormat) variables.get(variable).get(0)));
end

def type(single & member) trigger(componentfromLayer)
	if (component.name().equalsIgnoreCase($type+FirstUpperCase.class.getSimpleName())) schema.$name+firstLowerCase(($type+FirstLowerCase~FromNode(component)));
end

def type(multiple & member) trigger(componentfromLayer)
	if (component.name().equalsIgnoreCase($type+FirstUpperCase.class.getSimpleName())) schema.$name+firstLowerCase~List().add($type+FirstLowerCase~FromNode(component));
end