def type(slack & gen)
	package $package+ValidPackage;

	import io.intino.pandora.slack.Bot;

	import java.io.IOException;
	import java.util.logging.Level;
	import java.util.logging.Logger;

	public class $name+firstUpperCase+snakeCaseToCamelCase~SlackBot extends Bot {
		private static Logger LOG = Logger.getGlobal();


		public $name+firstUpperCase+snakeCaseToCamelCase~SlackBot($box+FirstUpperCase~Box box) {
			super(box.configuration.$name+snakeCaseToCamelCase+firstLowerCase~Configuration().token);
			$request+add...[$NL]
			try {
				execute();
			} catch (IOException e) {
				LOG.log(Level.SEVERE, e.getMessage(), e);
			}
		}
		[
		public void notify(String message) {
			send("$channel", message);
		}]
	}
end


def type(slack & actions)
	package $package+ValidPackage;

	import io.intino.pandora.Box;
	import io.intino.pandora.slack.Bot.MessageProperties;

	public class $name+firstUpperCase+snakeCaseToCamelCase~SlackBotActions {

		$request+method...[$NL$NL]
	}
end

def type(request) trigger(add)
	add("$name", "$description", (properties, args) -> $bot+firstUpperCase+snakeCaseToCamelCase~SlackBotActions.$name+snakeCaseToCamelCase+firstLowerCase(box, properties[, $parameter+cast...[, ]]));
end

def type(request & newMethod)
	static String $name+snakeCaseToCamelCase+firstLowerCase($box~Box box, MessageProperties properties[, $parameter...[, ]]) {
		return "";
	}
end

def type(request) trigger(method)
	static String $name+snakeCaseToCamelCase+firstLowerCase($box~Box box, MessageProperties properties[, $parameter...[, ]]) {
		return "";
	}
end



def type(parameter & Boolean) trigger(cast)
	Boolean.parseBoolean(args$[~$pos])
end

def type(parameter & Double) trigger(cast)
	Double.parseDouble(args$[~$pos])
end

def type(parameter & Integer) trigger(cast)
	Integer.parseInt(args$[~$pos])
end


def type(parameter & String) trigger(cast)
	args$[~$pos]
end

def type(parameter)
	$type $name
end