def type(widget)
	<link rel="import" href="../../lib/polymer/polymer.html">
    <link rel="import" href="../../lib/cotton-push/cotton-push-behavior.html">
    <link rel="import" href="../../lib/cotton-carrier/cotton-carrier-behavior.html">
    <link rel="import" href="../../lib/cotton-zombie/cotton-zombie.html">
    <link rel="import" href="../../lib/cotton-translator/cotton-translator-behavior.html">
	[$parent+import
	]
	<script src="$name+lowercase/requester.js"></script>
    <script src="$name+lowercase/notifier-listener.js"></script>

    <dom-module id="$name+camelCaseToSnakeCase">

        <template>
        	$parent
            $innerDisplay...[$NL]
        </template>

        <style>
        </style>

        <script>

            const $name+firstuppercase~Dictionary = {
                es: {
                },
                en: {
                }
            };

            Polymer({
                is: '$name+camelCaseToSnakeCase',

                behaviors: $[ CottonBehaviors.CarrierBehavior,
                             CottonBehaviors.PushBehavior,
                             CottonBehaviors.TranslatorBehavior,
                             $name+firstuppercase~Behaviors.Requester,
                             $name+firstuppercase~Behaviors.NotifierListener $],

                properties : {
                },

                attached : function() {
                    this.translate($name+firstuppercase~Dictionary);
                    this.listenToDisplay();
                }

            });
        </script>
    </dom-module>
end

def trigger(import)
	<link rel="import" href="../../lib/$dsl+lowercase/$value+lowercase~.html">
end

def trigger(innerDisplay)
	<div><cotton-zombie display="$value~Display" widget="$value"></cotton-zombie></div>
end

def trigger(parent)
	<div><cotton-zombie display="$value~Display" widget="$value"></cotton-zombie></div>
end
