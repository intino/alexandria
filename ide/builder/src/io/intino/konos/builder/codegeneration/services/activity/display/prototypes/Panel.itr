def type(panel)
	package $package.displays;

	import io.intino.konos.alexandria.activity.displays.AlexandriaDisplay;
	import io.intino.konos.alexandria.activity.displays.CatalogInstantBlock;
	import $package+validPackage.$box+firstUpperCase~Box;

	import java.util.function.Consumer;

	public class $name+firstUpperCase extends Abstract$name+firstUpperCase {

		public $name+firstUpperCase($box+firstUpperCase~Box box) {
			super(box);
		}

		public static class Toolbar {
			$operation...[$NL]
		}

		public static class Views {
			$view...[$NL]
		}
	}
end

def type(operation)
	public static AlexandriaDisplay $name+firstUpperCase($box+firstUpperCase~Box box) {
		return null;//TODO
	}
end

def type(view & display)
	public static class $name+firstUpperCase {
		public static AlexandriaDisplay $display+firstLowerCase($box+firstUpperCase~Box box, Consumer<Boolean> loadingListener, Consumer<CatalogInstantBlock> instantListener) {
			return null;//TODO
		}
	}
end

def type(view & catalogs)
	public static class $name+firstUpperCase {
		$filter
	}
end

def type(filter)
	public static boolean filter($box~Box box, io.intino.konos.alexandria.activity.model.Catalog catalog, io.intino.konos.alexandria.activity.model.Element context, Object target, Object object, String username) {
		return true;//TODO
	}
end

def type(view & mold)
end

def trigger(empty)
end

def trigger(quoted)
	"$value"
end