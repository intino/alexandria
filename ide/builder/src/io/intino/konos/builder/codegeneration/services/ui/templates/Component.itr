def type(component & reference) trigger(declarations)
	public [$ancestors+firstUpperCase...[.].]$name+firstUpperCase $name;[
	$component+declarations...[$NL]]
end

def type(component & reference) trigger(declaration)
	public [$ancestors+firstUpperCase...[.].]$name+firstUpperCase $name;
end

def type(component & reference) trigger(class)
	public class $name+firstUpperCase extends io.intino.alexandria.ui.displays.components.$type+firstUpperCase$facet<$abstractBox+type> {
		[$component+declaration...[$NL]

		]public $name+firstUpperCase($abstractBox+type box) {
			super(box);
		}

		@Override
		public void init() {
			super.init();[
			$component+reference...[$NL]]
		}[

		$component+class...[$NL]]
	}
end

def type(component & reference) trigger(childReferences)
	$name = [$ancestors...[.].]$name;[
	$component+childReferences...[$NL]]
end

def type(component & reference) trigger(references)
	$name = register(new $name+firstUpperCase(box()).id("$id"));[
	$component+childReferences...[$NL]]
end

def type(component & reference) trigger(initializations)
	$binding[
	$component+initializations...[$NL]]
end

def type(component & reference)
	$name = register(new $name+firstUpperCase(box()).id("$id"));
end

def type(facet)
	$name+firstUpperCase
end

def type(binding)
	$name.bindTo($selector, "$option");
end