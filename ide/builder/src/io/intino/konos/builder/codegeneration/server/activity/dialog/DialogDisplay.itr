def type(dialogDisplay)
	package $package.dialogs;

	import $package+validPackage.$box+firstUpperCase~Box;
	import io.intino.konos.server.activity.dialogs.Dialog;
	import io.intino.konos.server.activity.dialogs.DialogValidator;
    import io.intino.konos.server.activity.dialogs.DialogDisplay;

    import java.util.Arrays;

    public class SolicitudDialogDisplay extends DialogDisplay {

        public SolicitudDialogDisplay(KonosDialogsBox box) {
            super(box, buildDialog());
        }

        private static Dialog buildDialog() {
            Dialog dialog = new Dialog();
            $dialog
            return dialog;
        }

    }
end

def type(dialog)
	[dialog.label("$label");]
	[dialog.description("$description");]
	$tab...[$NL]
end

def type(tab)
	Dialog.Tab $name = dialog.createTab("$label");
	$text...[$NL]
	$section...[$NL]
	$memo...[$NL]
	$radio...[$NL]
	$check...[$NL]
	$combo...[$NL]
	$password...[$NL]
	$file...[$NL]
	$picture...[$NL]
	$date...[$NL]
	$dateTime...[$NL]
end


def type(section)
	Dialog.Section $name = dialog.createSection();
	$text...[$NL]
	$section...[$NL]
	$memo...[$NL]
	$radio...[$NL]
	$check...[$NL]
	$combo...[$NL]
	$password...[$NL]
	$file...[$NL]
	$picture...[$NL]
	$date...[$NL]
	$dateTime...[$NL]
end

def type(text)
	$owner.createText()[.edition(Dialog.TextEdition.$edition)][.validation($validation)][.label("$label")][.required($required)][.readonly($readonly)][.placeholder("$placeholder")][.helper("$helper")][.defaultValue("$defaultValue")][$validator];
end

def type(memo)
	$owner.createMemo()[.mode(Dialog.MemoMode.$mode)][.height($height)][.label("$label")][.required($required)][.readonly($readonly)][.placeholder("$placeholder")][.helper("$helper")][.defaultValue("$defaultValue")][$validator];
end

def type(radio)
	$owner.createRadioBox()[.source(input -> java.util.Arrays.asList($options+quoted...[, ]))][$source][.label("$label")][.required($required)][.readonly($readonly)][.placeholder("$placeholder")][.helper("$helper")][.defaultValue("$defaultValue")][$validator];
end

def type(check)
	$owner.createCheckBox()[.mode(Dialog.CheckBoxMode.$mode)][.source(input -> java.util.Arrays.asList($options+quoted...[, ]))][$source][.label("$label")][.required($required)][.readonly($readonly)][.placeholder("$placeholder")][.helper("$helper")][.defaultValue("$defaultValue")][$validator];
end

def type(combo)
	$owner.createComboBox()[.source(input -> java.util.Arrays.asList($options+quoted...[, ]))][$source][.label("$label")][.required($required)][.readonly($readonly)][.placeholder("$placeholder")][.helper("$helper")][.defaultValue("$defaultValue")][$validator];
end

def type(password)
	$owner.createPassword()[.validation($validation)][.label("$label")][.required($required)][.readonly($readonly)][.placeholder("$placeholder")][.helper("$helper")][.defaultValue("$defaultValue")][$validator];
end

def type(file)
	$owner.createFile()[.showPreview($showPreview)][.validation($validation)][.label("$label")][.required($required)][.readonly($readonly)][.placeholder("$placeholder")][.helper("$helper")][.defaultValue("$defaultValue")][$validator];
end

def type(picture)
	$owner.createPicture()[.showPreview($showPreview)][.validation($validation)][.label("$label")][.required($required)][.readonly($readonly)][.placeholder("$placeholder")][.helper("$helper")][.defaultValue("$defaultValue")][$validator];
end

def type(date)
	$owner.createDate()[.format("$format")][.label("$label")][.required($required)][.readonly($readonly)][.placeholder("$placeholder")][.helper("$helper")][.defaultValue("$defaultValue")][$validator];
end

def type(dateTime)
	$owner.createDateTime()[.format("$format")][.label("$label")][.required($required)][.readonly($readonly)][.placeholder("$placeholder")][.helper("$helper")][.defaultValue("$defaultValue")][$validator];
end

def type(validation & text)
	new Dialog.Tab.Text.Validation()[.allowedValues(java.util.Arrays.asList($allowedValues+quoted...[, ]))][.disallowedValues(java.util.Arrays.asList($disallowedValues+quoted...[, ]))][.disallowEmptySpaces(java.util.Arrays.asList($disallowEmptySpaces+quoted...[, ]))][.mask($mask)][.lenght($min,$max)]
end

def type(validation & password)
	new Dialog.Tab.Password.Validation()[.allowedValues(java.util.Arrays.asList($allowedValues+quoted...[, ]))][.disallowedValues(java.util.Arrays.asList($disallowedValues+quoted...[, ]))][.disallowEmptySpaces(java.util.Arrays.asList($disallowEmptySpaces+quoted...[, ]))][.mask($mask)][.lenght($min,$max)]
end

def type(validation & resource)
	new Dialog.Tab.Resource.Validation()[.maxSize($maxSize)][.allowedExtensions($allowedExtensions)]
end

def type(validator)
	.validator(input -> $dialog+FirstUpperCase~Dialog.Validators.$name((Dialog.Tab.$type) input))
end

def trigger(source)
	.source(input -> $dialog+FirstUpperCase~Dialog.Sources.$name((Dialog.Tab.$type) input))
end

def trigger(quoted)
	"$value"
end