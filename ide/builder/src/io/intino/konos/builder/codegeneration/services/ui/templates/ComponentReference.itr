def type(component & reference) trigger(declaration)
	public $name+firstUpperCase $name;
end

def type(component & reference) trigger(class)
	public class $name+firstUpperCase extends io.intino.alexandria.ui.displays.components.$type+firstUpperCase<$abstractBox+type> {
		[$component+declaration...[$NL]

		]public $name+firstUpperCase($abstractBox+type box) {
			super(box);
		}

		@Override
		public void init() {
			super.init();[
			$component+reference...[$NL]]
		}[

		$input][

		$component+class...[$NL]]
	}
end

def type(component & reference)
	$name = addAndPersonify(new $name+firstUpperCase(box()).id("$id"));
end

def type(input & filevalue)
	public void onChange(io.intino.alexandria.ui.displays.events.ChangeListener listener) { this.changeListener = listener; }
end

def type(input)
	public void onChange(io.intino.alexandria.ui.displays.events.ChangeListener listener) { this.changeListener = listener; }
	public void onKeyPress(io.intino.alexandria.ui.displays.events.KeyPressListener listener) { this.keyPressListener = listener; }
end