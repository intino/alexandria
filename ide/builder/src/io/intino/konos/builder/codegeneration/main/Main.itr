def type(main)
	package $package;

	import io.intino.tara.magritte.Graph;

	public class Main {

		public static void main(String$[] args) {
			$name+SnakeCaseToCamelCase+firstUpperCase~Configuration configuration = createConfigurationFromArgs(args);
			Graph graph = Setup.initGraph(configuration);
			run(graph, createConfigurationFromArgs(args));
			Runtime.getRuntime().addShutdownHook(new Thread(exit()));
		}

		private static $name+SnakeCaseToCamelCase+firstUpperCase~Configuration createConfigurationFromArgs(String$[] args) {
			return new $name+SnakeCaseToCamelCase+firstUpperCase~Configuration(args)$conf+set;
		}

		private static void run(Graph graph, $name+SnakeCaseToCamelCase+firstUpperCase~Configuration configuration) {
			$name+SnakeCaseToCamelCase+firstUpperCase~Box box = new $name+SnakeCaseToCamelCase+firstUpperCase~Box(graph, configuration);
			Setup.configureBox(box);
			box.init();
		}

		private static Runnable exit() {
			return () -> {
				[$rest~spark.Spark.stop();]
			};
		}
	}
end

def type(conf) trigger(set)
    $name+firstlowercase~Configuration($parameter+name...[, ])
end

def type(parameter) trigger(name)
    info.$conf+firstlowercase~$name+FirtsUpperCase;
end

def type(parameter) trigger(field)
    $type $conf+firstlowercase~$name+FirtsUpperCase;
end

def type(parameter) trigger(assign)
    if (keyValue$[0].equalsIgnoreCase("$conf+firstlowercase.$name+FirtsUpperCase"))
        $conf+firstlowercase~$name+FirtsUpperCase = $type+convert(keyValue$[1]);
end

def attribute(Integer) trigger(convert)
    Integer.parseInt
end

def attribute(Boolean) trigger(convert)
    Boolean.parseBoolean
end

def trigger(convert)
end