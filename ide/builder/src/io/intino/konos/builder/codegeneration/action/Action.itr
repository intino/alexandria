def type(action) !type(page)
	package $package+validPackage.actions;

	import $package+validPackage.$box+snakecaseToCamelCase+firstUpperCase~Box;
	import io.intino.konos.alexandria.exceptions.*;
	import java.time.*;
	import java.util.*;
	$schemaImport

	public class $name+snakecaseToCamelCase+firstUpperCase~Action {

		public $box+snakecaseToCamelCase+firstUpperCase~Box box;
		public io.intino.konos.alexandria.schema.Context context = new io.intino.konos.alexandria.schema.Context();[
		$parameter+type...[$NL]]

		public [$returnType?void] execute() [throws $throws+FirstUpperCase...[, ] ]{
			$returnType+return
		}
	}
end

def type(page & action & gen)
	package $package+validPackage.actions;

	import io.intino.konos.alexandria.exceptions.*;
	import io.intino.konos.alexandria.activity.spark.actions.AlexandriaPageAction;
	import java.util.*;

	public abstract class Abstract$name+snakecaseToCamelCase+firstUpperCase~Action extends AlexandriaPageAction {

		public Abstract$name+snakecaseToCamelCase+firstUpperCase~Action() { super("$activity+camelCaseToSnakeCase+lowerCase"); }

		public String execute() [throws $throws+FirstUpperCase...[, ] ]{
			return super.template("$name");
		}

		@Override
		protected String title() {
			return "$title";
		}

		@Override
		protected java.net.URL favicon() {
			return [$favicon?null;]
		}
	}
end

def trigger(favicon)
	this.getClass().getResource("$value");
end

def type(page & action) !type(gen)
	package $package+validPackage.actions;

	import $package+validPackage.$box+snakecaseToCamelCase+firstUpperCase~Box;
	import io.intino.konos.alexandria.exceptions.*;
	import io.intino.konos.alexandria.activity.spark.actions.AlexandriaPageAction;
	import java.time.*;
	import java.util.*;
	[import $importDialogs+validPackage.dialogs.*;]
	[import $importDisplays+validPackage.displays.*;]

	public class $name+snakecaseToCamelCase+firstUpperCase~Action extends Abstract$name+snakecaseToCamelCase+firstUpperCase~Action {

		public $box+snakecaseToCamelCase+firstUpperCase~Box box;
		$parameter+type...[$NL]

		$ui
	}
end

def type(parameter & fileData) trigger(type)
	public java.io.InputStream $name+snakecaseToCamelCase+FirstLowerCase;
end

def type(parameter & list) trigger(type)
	public java.util.List<$type> $name+snakecaseToCamelCase+FirstLowerCase;
end

def type(parameter) trigger(type)
	public $type $name+snakecaseToCamelCase+FirstLowerCase;
end

def attribute(void) trigger(return)
end

def trigger(return)
	return null;
end

def type(schemaImport) trigger(schemaImport)
	import $package.schemas.*;
end

def trigger(ui)
	public io.intino.konos.alexandria.activity.displays.Soul prepareSoul(io.intino.konos.alexandria.activity.services.push.ActivityClient client) {
	    return new io.intino.konos.alexandria.activity.displays.Soul(session) {
			@Override
			public void personify() {
				$value+snakecaseToCamelCase+firstUpperCase display = new $value+snakecaseToCamelCase+firstUpperCase(box);
				register(display);
				display.personify();
			}
		};
	}
end