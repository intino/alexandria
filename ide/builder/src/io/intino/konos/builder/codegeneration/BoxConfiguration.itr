def type(boxConfiguration)
	package $package;

	import java.util.LinkedHashMap;
	import java.util.Map;
	import java.util.UUID;
	[import io.intino.tara.magritte.Graph;$tara+import]

	public class $name+SnakeCaseToCamelCase+firstUpperCase~Configuration [extends $parentPackage.konos.$parent+snakeCaseToCamelCase+firstUpperCase~Configuration] {

		$service+field...[$NL]

		$service...[$NL$NL]

		$service+confClass...[$NL$NL]
	}
end

def type(service) trigger(field)
	$name+snakeCaseToCamelCase+firstUpperCase~Configuration $name+snakeCaseToCamelCase+firstLowerCase~Configuration;
end

def type(service & jms) trigger(confClass)
	public static class $name+snakeCaseToCamelCase+firstUpperCase~Configuration {
		public String url;
		public String user;
		public String password;
		$custom+field...[$NL]
	}
end

def type(service & channel) trigger(confClass)
	public static class $name+snakeCaseToCamelCase+firstUpperCase~Configuration {
		[public String clientID = "$clientID"];
		$custom+field...[$NL]
	}
end

def type(service & bus) trigger(confClass)
	public static class $name+snakeCaseToCamelCase+firstUpperCase~Configuration {
		public String url;
		public String user;
		public String password;
		public String clientID;
	}
end

def type(service & jmx) trigger(confClass)
	public static class $name+snakeCaseToCamelCase+firstUpperCase~Configuration {
		public int port;
	}
end

def type(service & slack) trigger(confClass)
	public static class $name+snakeCaseToCamelCase+firstUpperCase~Configuration {
		public String token;
	}
end

def type(service & activity) trigger(confClass)
	public static class $name+snakeCaseToCamelCase+firstUpperCase~Configuration {
		public int port;
		public String webDirectory;
		public io.intino.konos.server.activity.services.AuthService authService;
		$custom+field...[$NL]

		[public java.net.URL authServiceUrl() {
			try {
				return new java.net.URL("$auth"$custom+replace...[]);
			} catch (java.net.MalformedURLException e) {
				return null;
			}
		}]
	}
end

def type(custom) trigger(replace)
	.replace("{$name}", $name+validname+firstLowerCase)
end


def type(service & rest) trigger(confClass)
	public static class $name+snakeCaseToCamelCase+snakeCaseToCamelCase+firstUpperCase~Configuration {
		public int port;
		public String webDirectory;
		$custom+field...[$NL]
	}
end

def type(service & jms)
	public $configuration+snakeCaseToCamelCase+firstUpperCase~Configuration $name+snakeCaseToCamelCase+firstLowerCase~Configuration(String url, String user, String password[, $custom+signature...[, ]]) {
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration = new $name+snakeCaseToCamelCase+firstUpperCase~Configuration();
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration.url = url;
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration.user = user;
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration.password = password;
		$custom+assign...[$NL]
		return this;
	}

	public $name+snakeCaseToCamelCase+firstUpperCase~Configuration $name+snakeCaseToCamelCase+firstLowerCase~Configuration() {
		return this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration;
	}
end


def type(service & jmx)
	public $configuration+snakeCaseToCamelCase+firstUpperCase~Configuration $name+snakeCaseToCamelCase+firstLowerCase~Configuration(int port) {
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration = new $name+snakeCaseToCamelCase+firstUpperCase~Configuration();
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration.port = port;
		return this;
	}

	public $name+snakeCaseToCamelCase+firstUpperCase~Configuration $name+snakeCaseToCamelCase+firstLowerCase~Configuration() {
		return this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration;
	}
end

def type(service & slack)
	public $configuration+snakeCaseToCamelCase+firstUpperCase~Configuration $name+snakeCaseToCamelCase+firstLowerCase~Configuration(String token) {
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration = new $name+snakeCaseToCamelCase+firstUpperCase~Configuration();
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration.token = token;
		return this;
	}

	public $name+snakeCaseToCamelCase+firstUpperCase~Configuration $name+snakeCaseToCamelCase+firstLowerCase~Configuration() {
		return this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration;
	}
end


def type(service & bus)
	public $configuration+snakeCaseToCamelCase+firstUpperCase~Configuration $name+snakeCaseToCamelCase+firstLowerCase~Configuration(String url, String user, String password, String clientID[, $custom+signature...[, ]]) {
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration = new $name+snakeCaseToCamelCase+firstUpperCase~Configuration();
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration.url = url;
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration.user = user;
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration.password = password;
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration.clientID = clientID;
		return this;
	}

	public $name+snakeCaseToCamelCase+firstUpperCase~Configuration $name+snakeCaseToCamelCase+firstLowerCase~Configuration() {
		return this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration;
	}
end

def type(service & channel)
	public $configuration+snakeCaseToCamelCase+firstUpperCase~Configuration set$name+snakeCaseToCamelCase+firstUpperCase~Configuration($custom+signature...[, ]) {
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration = new $name+snakeCaseToCamelCase+firstUpperCase~Configuration();
		$custom+assign...[$NL]
		return this;
	}

	public $name+snakeCaseToCamelCase+firstUpperCase~Configuration $name+snakeCaseToCamelCase+firstLowerCase~Configuration() {
		return this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration;
	}
end

def type(durable) trigger(assign)
	[$name+snakeCaseToCamelCase+firstLowerCase~Configuration.clientID ]
end

def type(service & rest)
	public $configuration+snakeCaseToCamelCase+firstUpperCase~Configuration $name+snakeCaseToCamelCase+firstLowerCase~Configuration(int port, String webDirectory[, $custom+signature...[, ]]) {
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration = new $name+snakeCaseToCamelCase+firstUpperCase~Configuration();
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration.port = port;
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration.webDirectory = webDirectory;
		$custom+assign...[$NL]
		return this;
	}

	public $configuration+snakeCaseToCamelCase+firstUpperCase~Configuration $name+snakeCaseToCamelCase+firstLowerCase~Configuration(int port[, $custom+signature...[, ]]) {
		return $name+snakeCaseToCamelCase+firstLowerCase~Configuration(port, "www/"[, $custom+name...[, ]]);
	}

	public $name+snakeCaseToCamelCase+firstUpperCase~Configuration $name+snakeCaseToCamelCase+firstLowerCase~Configuration() {
		return $name+snakeCaseToCamelCase+firstLowerCase~Configuration;
	}
end


def type(service & activity)
	public $configuration+snakeCaseToCamelCase+firstUpperCase~Configuration $name+snakeCaseToCamelCase+firstLowerCase~Configuration(int port, String webDirectory, io.intino.konos.server.activity.services.AuthService authService[, $custom+signature...[, ]]) {
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration = new $name+snakeCaseToCamelCase+firstUpperCase~Configuration();
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration.port = port;
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration.webDirectory = webDirectory;
		this.$name+snakeCaseToCamelCase+firstLowerCase~Configuration.authService = authService;
		$custom+assign...[$NL]
		return this;
	}

	public $configuration+snakeCaseToCamelCase+firstUpperCase~Configuration $name+snakeCaseToCamelCase+firstLowerCase~Configuration(int port, io.intino.konos.server.activity.services.AuthService authService[, $custom+signature...[, ]]) {
		return $name+snakeCaseToCamelCase+firstLowerCase~Configuration(port, "www/", authService[, $custom+name...[, ]]);
	}

	public $name+snakeCaseToCamelCase+firstUpperCase~Configuration $name+snakeCaseToCamelCase+firstLowerCase~Configuration() {
		return $name+snakeCaseToCamelCase+firstLowerCase~Configuration;
	}
end

def type(custom) trigger(signature)
	$type $name+validname+firstLowerCase
end
def type(custom) trigger(name)
	$name+validname+firstLowerCase
end

def type(custom) trigger(field)
	public $type $name+validname+firstLowerCase;
end

def type(custom) trigger(assign)
	this.$conf+validname+firstLowerCase~Configuration.$name+validname+firstLowerCase = $name+validname+firstLowerCase;
end
