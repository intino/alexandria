def type(reference)
	<Displays.$name+firstUppercase context={this.instanceId.bind(this)} id="$id"$properties+common$properties+specific></Displays.$name+firstUppercase>
end

def type(child) trigger(declaration)
end

def type(block & child) trigger(child)
	$value
end

def type(child) trigger(child)
	$value
end

def type(child) trigger(add)
end

def type(component & child & stampblock & multipleblock)
	{this.renderInstances("$name"[, { noItemsMessage: "$noItemsMessage" }])}
end

def type(component & child)
	<$extends context={this.instanceId.bind(this)} id="$id"$properties+common$properties+specific[ $code]>[
		$reference...[$NL]][
		$methods][
		$component+child...[$NL]][
	]</$extends>
end

def type(extends & multiple)
	Ui.Multiple
end

def type(extends & stampblock)
	Displays.$type+firstUpperCase
end

def type(extends)
	Ui.$type+firstUpperCase$facet
end

def type(facet)
	$name+firstUpperCase
end

def type(method)
end

def type(properties & multiple) trigger(common)
	[ label="$label"][ format="$format...[ ]"]
end

def type(properties & operation) trigger(common)
	[ label="$label"][ format="$format...[ ]"]
end

def type(properties) trigger(common)
	[ label="$label"][ format="$format...[ ]"][ multiple={{instances:"$instances",layout:"$multipleLayout"}}][ color="$color"]
end

def type(properties & mold) trigger(specific)
	[ layout="$layout...[ ]"][ width="$width"][ height="$height"][ spacing="$spacing"]
end

def type(properties & image) trigger(specific)
	[ width="$width"][ height="$height"]
end

def type(properties & file) trigger(specific)
	[ width="$width"][ height="$height"]
end

def type(properties & chart) trigger(specific)
	[ width="$width"][ height="$height"]
end

def type(properties & block) trigger(specific)
	[ layout="$layout...[ ]"][ width="$width"][ height="$height"][ spacing="$spacing"][ collapsible="$collapsible"][ stamp="$stamp"][ $paper][ $badge]
end

def type(properties & date) trigger(specific)
	[ pattern="$pattern"][ mode="$mode"][ value={new Date($value)}][ timePicker={$timePicker}][ mask="$mask"]
end

def type(properties & number) trigger(specific)
	[ value={$value}][ prefix="$prefix"][ suffix="$suffix"][ min={$min}][ max={$max}][ step={$step}]
end

def type(properties & header) trigger(specific)
	[ position="$position"]
end

def type(properties & codeText) trigger(specific)
	[ mode="$mode"][ language="$language"][ highlight=$highlight]
end

def type(properties & text) trigger(specific)
	[ mode="$mode"][ prefix="$prefix"][ suffix="$suffix"][ value="$defaultValue"][ highlight={$highlight}]
end

def type(properties & openpage) trigger(specific)
	[ title="$title"][ target="$target"]
end

def type(properties & collection) trigger(specific)
	[ noItemsMessage="$noItemsMessage"][ pageSize={$pageSize}]
end

def type(properties & spinner) trigger(specific)
	[ mode="$mode"]
end

def type(properties) trigger(specific)
end

def type(badge)
	mode="$mode"[ value={$value}][ max={$max}][ showZero={$showZero}]
end

def type(codetext)
	value="$value"
end

def type(highlight)
	{text:"$text",background:"$background"}
end