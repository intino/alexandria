def type(display)
	package $package.displays;

	import io.intino.konos.exceptions.*;
	import $package.*;
	import $package+validPackage.$box+firstUpperCase~Box;
	$schemaImport
    import $package+validPackage.displays.notifiers.$name+firstUpperCase~DisplayNotifier;
    import io.intino.konos.server.activity.displays.Display;
    import io.intino.konos.server.activity.services.push.User;

    public class $name+firstUpperCase~Display extends Display<$name+firstUpperCase~DisplayNotifier> {
        private $box+firstUpperCase~Box box;

        public $name+firstUpperCase~Display($box+firstUpperCase~Box box) {
            super();
            this.box = box;
        }

		$request...[$NL$NL]
    }
end
def type(request & asset)
	public io.intino.konos.server.activity.spark.ActivityFile $name([$parameter value]) {
        return null;
	}
end
def type(request)
	public void $name([$parameter value]) {

	}
end

def type(list) trigger(parameter)
    $value+firstUpperCase$[]
end

def trigger(parameter)
    $value+firstUpperCase
end

def type(schemaImport)
	import $package.schemas.*;
end