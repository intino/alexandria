def type(display)
	package $package.ui.displays[.$packageType~s];

	import io.intino.alexandria.core.Box;
	import io.intino.alexandria.exceptions.*;
	import io.intino.alexandria.ui.displays.components.*;
	import $package.ui.*;
	$schemaImport
	import $package+validPackage.$box+firstUpperCase~Box;

	$moldsImport
	$blocksImport
	import $package+validPackage.ui.displays.notifiers.$name+firstUpperCase~Notifier;

    public class [$abstract]$name+firstUpperCase$abstractBox+extension extends io.intino.alexandria.ui.displays.$type+firstUpperCase<$name+firstUpperCase~Notifier, $abstractBox+type>[ $implements] {
    	[$attribute...[$NL]
    	][$component+declarations...[$NL]

        ]public [$abstract]$name+firstUpperCase($abstractBox+type box) {
            super(box);
            id("$id");
        }

        @Override
		public void init() {
			super.init();
			$componentReferences[
			$component+initializations...[$NL]]
		}[
		$methods
		][
		$component+class...[$NL]][
		$component+method...[$NL]]
	}
end

def type(moldsImport)
	import $package+validPackage.ui.displays.molds.*;
end

def type(blocksImport)
	import $package+validPackage.ui.displays.blocks.*;
end

def type(componentReferences & forMold)
	$component+moldReferences...[$NL]
end

def type(componentReferences & forBlock)
	$component+blockReferences...[$NL]
end

def type(componentReferences)
	$component+references...[$NL]
end

def type(attribute)
	public $clazz $name+firstLowerCase;
end

def type(methods & timeconsumingmold)
	@Override
	public void showLoading() {
		notifier.refreshLoading(true);
	}

	@Override
	public void hideLoading() {
		notifier.refreshLoading(false);
	}
end
