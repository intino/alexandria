def type(widget)
	<link rel="import" href="../../lib/polymer/polymer.html">
    <link rel="import" href="../../lib/cotton-push/cotton-push-behavior.html">
    <link rel="import" href="../../lib/cotton-carrier/cotton-carrier-behavior.html">
    <link rel="import" href="../../lib/cotton-zombie/cotton-zombie.html">
    <link rel="import" href="../../lib/cotton-translator/cotton-translator-behavior.html">
    [<link rel="import" href="../../lib/alexandria-ui-elements/alexandria-$type+camelCaseToSnakeCase.html">]

	[$parent+import
	]
	[$imports
	][
	$routes+routesImport
	]
	<script src="$name+lowercase/requester.js"></script>
    <script src="$name+lowercase/notifier-listener.js"></script>

    <dom-module id="$name+camelCaseToSnakeCase">

        <template>
        	$routes
        	$parent
            $innerDisplay...[$NL]
            $attached
            $prototype
        </template>

        <style>
        </style>

        <script>

            const $name+firstuppercase~Dictionary = {
                es: {
                },
                en: {
                }
            };

            Polymer({
                is: '$name+camelCaseToSnakeCase',

                behaviors: $[ CottonBehaviors.CarrierBehavior,
                             CottonBehaviors.PushBehavior,
                             CottonBehaviors.TranslatorBehavior,
							 $name+firstuppercase~Behaviors.Requester,
							 $name+firstuppercase~Behaviors.NotifierListener
                             $],

                properties : {
                },
				$attached+js
				$prototype+js

            });
        </script>
    </dom-module>
end

def trigger(routesImport)
	<link rel="import" href="$name+lowercase/$name+camelCaseToSnakeCase~-routes.html">
end

def trigger(routes)
	<$name+camelCaseToSnakeCase~-routes></$name+camelCaseToSnakeCase~-routes>
end

def trigger(imports)
	<script src="../../lib/alexandria-ui-elements/alexandria$type+snakecaseToCamelCase+lowercase/requester.js"></script>
	<script src="../../lib/alexandria-ui-elements/alexandria$type+snakecaseToCamelCase+lowercase/notifier-listener.js"></script>
end

def trigger(attached) trigger(js)
	attached : function() {
		this.translate($widget+firstuppercase~Dictionary);
		this.listenToDisplay();
	}
end

def type(attached)
end

def type(prototype) trigger(js)
	attached : function() {
		this.translate($widget+firstuppercase~Dictionary);
		this._linkWithAlexandriaElement();
		this.listenToDisplay();
	},

	_linkWithAlexandriaElement : function() {
		var element = this.querySelector("alexandria-$type+camelCaseToSnakeCase");
		element.display = this.display;
		element.behaviors.push(Alexandria~$type+snakeCaseToCamelCase+firstuppercase~Behaviors.Requester);
		element.behaviors.push(Alexandria~$type+snakeCaseToCamelCase+firstuppercase~Behaviors.NotifierListener);
		element.behaviors.push($widget+firstuppercase~Behaviors.NotifierListener);
		for (var i in $widget+firstuppercase~Behaviors.Requester) element$[i] = $widget+firstuppercase~Behaviors.Requester$[i];
		element.listenToDisplay();
	}
end

def type(prototype)
	<alexandria-$type+camelCaseToSnakeCase></alexandria-$type+camelCaseToSnakeCase>
end

def trigger(import)
	<link rel="import" href="../../lib/$dsl+lowercase/$value+lowercase~.html">
end

def trigger(innerDisplay)
	<div><cotton-zombie display="$value" widget="$value"></cotton-zombie></div>
end

def trigger(parent)
	<div><cotton-zombie display="$value" widget="$value"></cotton-zombie></div>
end
