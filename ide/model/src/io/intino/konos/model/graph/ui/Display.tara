dsl Proteo

use DataTypes
use UI
use Component

Concept:Named PassiveView is abstract
	Concept Request extends Data
		var word:{Asset Void} responseType = Void
		var Exception[] exceptionRefs = empty
		has Exception

	Concept Notification extends Data
		var word:{All Client Display} to = Display
		var Exception[] exceptionRefs = empty
		has Exception

Concept:Named Display extends PassiveView
	var string label = empty
	var Components.Component[] components = empty
	var string parentDisplay = empty

	has Components.Block

Concept PageDisplay extends Display

Concept Desktop extends PageDisplay
	has:{1..1} Components.AppBar
	has:{1..1} Components.Tabs

Concept Root extends PageDisplay
	has Components.Component

Facet DrawerNavigable on Desktop
	var word:{Left Right Top Bottom} direction = Left
	var word:{Normal Modal} mode = Normal
	var boolean hasMiniVariant = false
	var boolean underAppBar = false

Concept Editor extends PageDisplay
	has Components.Block

Facet Accessible on Display
	var string[] parameters

Facet Addressable on Display.Request
	var UI.Resource addressableResource
	var boolean encoded = false
	var boolean listenForChanges = true

Facet Decorated on Display
