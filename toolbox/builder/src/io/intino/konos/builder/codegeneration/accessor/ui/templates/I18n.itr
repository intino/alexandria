def type(i18n)
	$use+import...[$NL]

	const I18n = (function () {
		var cache = {};

		var translators = {
			$translator...[,$NL]
		};

		function merge(dictionary, lang) {
			if (dictionary == null) dictionary = {};
			$use+addWords...[$NL]
			return dictionary;
		};

		function addWords(dictionary, words) {
			if (words == null) return;
			for (var index in words) dictionary$[index$] = words$[index$];
			return dictionary;
		};

		var loader = {
			load: (lang) => {
				if (cache$[lang$] == null) cache$[lang$] = merge(translators$[lang$], lang);
				return cache$[lang$];
			}
		};

		return loader;
	})();

	export default I18n;
end

def type(translator)
	"$language" : {
		$translation...[,$NL]
	}
end

def type(translation)
	"$text" : "$value"
end

def type(use) trigger(import)
	import $name+firstUpperCase~I18n from "$service+camelCaseToSnakeCase~/gen/I18n";
end

def type(use) trigger(addWords)
	addWords(dictionary, $name+firstUpperCase~I18n.load(lang));
end