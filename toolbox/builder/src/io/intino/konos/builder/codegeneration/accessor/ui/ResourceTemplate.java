package io.intino.konos.builder.codegeneration.accessor.ui;

import io.intino.itrules.RuleSet;
import io.intino.itrules.Template;

public class ResourceTemplate extends Template {

	public RuleSet ruleSet() {
		return new RuleSet().add(
				rule().condition((type("resource"))).output(literal("<!DOCTYPE html>\n<html>\n    <head>\n        <title>$title</title>\n\n        <meta charset=\"utf-8\"/>\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"/>\n        <meta name=\"viewport\" content=\"width=device-width, minimum-scale=1.0, initial-scale=1, user-scalable=yes\"/>\n\n        <link rel=\"icon\" href-absolute=\"$favicon\">\n\n        <script src=\"lib/jquery/dist/jquery.min.js\"></script>\n        <script src=\"lib/cotton-push/PushService.js\"></script>\n        <script src=\"lib/moment/min/moment-with-locales.min.js\"></script>\n        <script src=\"lib/webcomponentsjs/webcomponents-lite.min.js\"></script> <!-- fix paper-calendar.html import bug -->\n        <script src=\"lib/numeral/min/numeral.min.js\"></script>\n        <script src=\"lib/numeral/min/languages.min.js\"></script>\n\n        <script src=\"main.js\"></script>\n\n        <link rel=\"import\" href=\"components.html\">\n        <link rel=\"import\" href=\"styles/app-theme.html\">\n        <script src=\"lib/moment/min/moment-with-locales.min.js\"></script> <!-- fix paper-calendar.html import bug -->\n\n\t\t<style>\n\t\t\thtml {\n\t\t\t\theight: 100%;\n\t\t\t}\n\t\t\tbody {\n\t\t\t\theight: calc(100% - 16px);\n\t\t\t}\n\t\t</style>\n    </head>\n\n    <body unresolved class=\"fullbleed\">\n        <template is=\"dom-bind\" id=\"app\">\n            <page-body base-url=\"$baseUrl\" base-path=\"$basePath\" url=\"$url\" client=\"$client\" language=\"$language\"></page-body>\n        </template>\n\n        <dom-module id=\"page-body\">\n\n            <template>\n                <cotton-zombie id=\"root\" display=\"")).output(mark("uses")).output(literal("\" widget=\"")).output(mark("uses")).output(literal("\" language=\"$language\"></cotton-zombie>\n            </template>\n\n            <style>\n                :host {\n                    height: 100%;\n                }\n            </style>\n\n            <script>\n\t\t\t\tHTMLImports.whenReady(function() {\n\t\t\t\t\t")).output(mark("polymer")).output(literal("\n\t\t\t\t});\n            </script>\n        </dom-module>\n\n        <script>\n            var configuration = {};\n            configuration.googleApiKey = \"$googleApiKey\";\n            configuration.pushServices = \"$pushUrls\".split(\",\");\n\n            launchApplication(configuration);\n        </script>\n    </body>\n</html>")),
				rule().condition((allTypes("polymer", "editor"))).output(literal("Polymer({\n\tis: 'page-body',\n\n\tattached : function() {\n\t\tthis._initEditor();\n\t},\n\n\t_initEditor : function() {\n\t\tvar widget = this;\n\t\tthis.$.root.whenPersonified().execute(function() {\n\t\t\tvar editor = widget.querySelector(\"alexandria-editor\");\n\n\t\t\teditor.onSaved = function() {\n\t\t\t\tif (document.onSaved) document.onSaved();\n\t\t\t};\n\n\t\t\tdocument.save = function() {\n\t\t\t\teditor.save();\n\t\t\t}\n\t\t});\n\t}\n});")),
				rule().condition((type("polymer"))).output(literal("Polymer({\n\tis: 'page-body'\n});"))
		);
	}
}