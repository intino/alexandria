package io.intino.konos.builder.codegeneration.services.ui.display.toolbar;

import io.intino.itrules.RuleSet;
import io.intino.itrules.Template;

public class AbstractOperationTemplate extends Template {

	public RuleSet ruleSet() {
		return new RuleSet().add(
				rule().condition((allTypes("download", "operation")), (trigger("operation"))).output(literal("result.add(new io.intino.alexandria.ui.model.toolbar.Download().execute((element, options, selfId, session) -> ")).output(mark("owner", "FirstUpperCase")).output(literal(".Toolbar.download(box, (Catalog) element, options, selfId, session)).mode(\"")).output(mark("mode")).output(literal("\").name(\"")).output(mark("name")).output(literal("\")")).output(expression().output(literal(".title(\"")).output(mark("title")).output(literal("\")"))).output(expression().output(literal(".alexandriaIcon(\"")).output(mark("icon")).output(literal("\""))).output(literal("));")),
				rule().condition((allTypes("downloadselection", "operation")), (trigger("operation"))).output(literal("result.add(new io.intino.alexandria.ui.model.toolbar.DownloadSelection().execute((element, option, selection, selfId, session) -> ")).output(mark("owner", "FirstUpperCase")).output(literal(".Toolbar.downloadSelection(box, (Catalog) element, option, selfId, (java.util.List<")).output(mark("itemClass")).output(literal(">)(Object) selection, session)).mode(\"")).output(mark("mode")).output(literal("\").name(\"")).output(mark("name")).output(literal("\").title(\"")).output(mark("title")).output(literal("\").alexandriaIcon(\"")).output(mark("icon")).output(literal("\"));")),
				rule().condition((allTypes("operation", "export")), (trigger("operation"))).output(literal("result.add(new io.intino.alexandria.ui.model.toolbar.Export().execute((element, from, to, selfId, session) -> ")).output(mark("owner", "FirstUpperCase")).output(literal(".Toolbar.export(box, (")).output(mark("ownerClass")).output(literal(") element, from, to, selfId, session)).mode(\"")).output(mark("mode")).output(literal("\").name(\"")).output(mark("name")).output(literal("\")")).output(expression().output(literal(".title(\"")).output(mark("title")).output(literal("\")"))).output(expression().output(literal(".alexandriaIcon(\"")).output(mark("icon")).output(literal("\")"))).output(literal(");")),
				rule().condition((allTypes("exportselection", "operation")), (trigger("operation"))).output(literal("result.add(new io.intino.alexandria.ui.model.toolbar.ExportSelection().execute((element, from, to, selection, selfId, session) -> ")).output(mark("owner", "FirstUpperCase")).output(literal(".Toolbar.exportSelection(box, (Catalog) element, from, to, (java.util.List<")).output(mark("itemClass")).output(literal(">)(Object) selection, selfId, session)).mode(\"")).output(mark("mode")).output(literal("\").name(\"")).output(mark("name")).output(literal("\").title(\"")).output(mark("title")).output(literal("\").alexandriaIcon(\"")).output(mark("icon")).output(literal("\"));")),
				rule().condition((allTypes("task", "operation")), (trigger("operation"))).output(literal("result.add(new io.intino.alexandria.ui.model.toolbar.Task().execute((element, selfId, session) -> ")).output(mark("owner", "FirstUpperCase")).output(literal(".Toolbar.task(box, (Catalog) element, selfId, session))")).output(expression().output(literal(".confirmText(\"")).output(mark("confirmText")).output(literal("\")"))).output(literal(".mode(\"")).output(mark("mode")).output(literal("\").name(\"")).output(mark("name")).output(literal("\")")).output(expression().output(literal(".title(\"")).output(mark("title")).output(literal("\")"))).output(expression().output(literal(".alexandriaIcon(\"")).output(mark("icon")).output(literal("\")"))).output(literal(");")),
				rule().condition((allTypes("taskselection", "operation")), (trigger("operation"))).output(literal("result.add(new io.intino.alexandria.ui.model.toolbar.TaskSelection().execute((element, option, selection, selfId, session) -> ")).output(mark("owner", "FirstUpperCase")).output(literal(".Toolbar.taskSelection(box, (Catalog) element, option, (java.util.List<")).output(mark("itemClass")).output(literal(">)(Object)selection, selfId, session))")).output(expression().output(literal(".confirmText(\"")).output(mark("confirmText")).output(literal("\")"))).output(literal(".mode(\"")).output(mark("mode")).output(literal("\").name(\"")).output(mark("name")).output(literal("\").title(\"")).output(mark("title")).output(literal("\").alexandriaIcon(\"")).output(mark("icon")).output(literal("\"));")),
				rule().condition((allTypes("operation", "groupingselection")), (trigger("operation"))).output(literal("result.add(new io.intino.alexandria.ui.model.toolbar.GroupingSelection().mode(\"")).output(mark("mode")).output(literal("\")")).output(expression().output(literal(".name(\"")).output(mark("name")).output(literal("\")"))).output(expression().output(literal(".title(\"")).output(mark("title")).output(literal("\")"))).output(expression().output(literal(".alexandriaIcon(\"")).output(mark("icon")).output(literal("\"))"))).output(literal(";")),
				rule().condition((allTypes("opendialog", "operation")), (trigger("operation"))).output(literal("result.add(new io.intino.alexandria.ui.model.toolbar.OpenDialog().dialogType(\"")).output(mark("dialog")).output(literal("\").dialogBuilder((session) -> ")).output(mark("package", "validPackage")).output(literal(".dialogs.Dialogs.dialogFor(box, \"")).output(mark("dialog")).output(literal("\")).mode(\"")).output(mark("mode")).output(literal("\").name(\"")).output(mark("name")).output(literal("\")")).output(expression().output(literal(".title(\"")).output(mark("title")).output(literal("\")"))).output(expression().output(literal(".alexandriaIcon(\"")).output(mark("icon")).output(literal("\")"))).output(literal(");")),
				rule().condition((allTypes("opencatalog", "operation")), (trigger("operation"))).output(literal("result.add(new io.intino.alexandria.ui.model.toolbar.OpenCatalog()")).output(expression().output(literal(".filter(")).output(mark("openCatalogOperationFilter")).output(literal(")"))).output(literal(".position(\"")).output(mark("position")).output(literal("\").catalogDisplayBuilder((session) -> (io.intino.alexandria.ui.displays.AlexandriaAbstractCatalog) Displays.displayFor(box, \"")).output(mark("openCatalog")).output(literal("\")).catalog((io.intino.alexandria.ui.model.Catalog) Displays.displayFor(box, \"")).output(mark("openCatalog")).output(literal("\").element()).views(java.util.Arrays.asList(")).output(mark("view", "quoted").multiple(", ")).output(literal(")).width(")).output(mark("width")).output(literal(").height(")).output(mark("height")).output(literal(").mode(\"")).output(mark("mode")).output(literal("\").name(\"")).output(mark("name")).output(literal("\").title(\"")).output(mark("title")).output(literal("\").alexandriaIcon(\"")).output(mark("icon")).output(literal("\"));")),
				rule().condition((allTypes("operation", "opencatalogselection")), (trigger("operation"))).output(literal("result.add(new io.intino.alexandria.ui.model.toolbar.OpenCatalogSelection().execution((element, selection, openCatalogSelection, selfId, session) -> ")).output(mark("owner", "FirstUpperCase")).output(literal(".Toolbar.openCatalogSelection(box, (Catalog) element, (java.util.List<")).output(mark("itemClass")).output(literal(">)(Object)selection, (java.util.List<Object>)openCatalogSelection, selfId, session))")).output(expression().output(literal(".filter(")).output(mark("openCatalogSelectionOperationFilter")).output(literal(")"))).output(literal(".position(\"")).output(mark("position")).output(literal("\").selection(\"")).output(mark("selection")).output(literal("\").catalogDisplayBuilder((session) -> (io.intino.alexandria.ui.displays.AlexandriaAbstractCatalog) Displays.displayFor(box, \"")).output(mark("openCatalog")).output(literal("\")).catalog((io.intino.alexandria.ui.model.Catalog) Displays.displayFor(box, \"")).output(mark("openCatalog")).output(literal("\").element()).views(java.util.Arrays.asList(")).output(mark("view", "quoted").multiple(", ")).output(literal(")).width(")).output(mark("width")).output(literal(").height(")).output(mark("height")).output(literal(").mode(\"")).output(mark("mode")).output(literal("\").name(\"")).output(mark("name")).output(literal("\").title(\"")).output(mark("title")).output(literal("\").alexandriaIcon(\"")).output(mark("icon")).output(literal("\"));")),
				rule().condition((trigger("opencatalogoperationfilter"))).output(literal("(context, object, session) -> ")).output(mark("owner", "FirstUpperCase")).output(literal(".Toolbar.openCatalogFilter(box, (")).output(mark("ownerClass")).output(literal(") context, object, session)")),
				rule().condition((trigger("opencatalogselectionoperationfilter"))).output(literal("(context, selection, object, session) -> ")).output(mark("owner", "FirstUpperCase")).output(literal(".Toolbar.openCatalogSelectionFilter(box, (Catalog) context, (java.util.List<")).output(mark("itemClass")).output(literal(">)(Object)selection, object, session)"))
		);
	}
}