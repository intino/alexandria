def type(reference)
	<Displays$name+firstUppercase context={this._context.bind(this)} owner={this._owner.bind(this)} id="[$parentPath~.]$id"$properties+common$properties+specific></Displays$name+firstUppercase>
end

def type(child) trigger(declaration)
end

def type(block & child) trigger(child)
    $value
end

def type(child) trigger(child)
	$value
end

def type(child) trigger(add)
end

def type(component & child & item)
end

def type(component & child)
	<$extends context={this._context.bind(this)} owner={this._owner.bind(this)} id="[$parentPath~.]$id"$properties+common$properties+specific[ $code]>
		[$reference...[$NL]]
		[$methods]
		[$component+child...[$NL]]
	[</$extends>]
end

def type(extends & multiple & image)
	UiMultipleImage
end

def type(extends & multiple)
	UiMultiple
end

def type(extends & displaystamp)
	Ui$type+firstUpperCase$facet...[]
end

def type(extends & proxystamp)
	UiProxyStamp
end

def type(extends & basestamp)
	Displays$type+firstUpperCase
end

def type(extends)
	Ui$type+firstUpperCase$facet...[]
end

def type(facet)
	$name+firstUpperCase
end

def type(method)
end

def type(properties & actionable) trigger(common)
	[ title="$title"][ name="$name"][ target="$target"][ mode="$actionableMode"][ icon="$icon"][ affirmed="$affirmed"][ traceable={$traceable}][ signed={{text:"$signText",reason:"$reasonText"}}][ readonly={$readonly}][ size="$size"][ format="$format...[ ]"][ highlighted="$highlighted"][ visible={$visible}][ style="$style"][ color="$color"]
end

def type(properties & abstractslider) trigger(common)
	[ label="$label"][ format="$format...[ ]"][ color="$color"][ traceable={$traceable}][ arrangement="$arrangement"][ animation={{interval:$interval,loop:$loop}}][ readonly={$readonly}][ visible={$visible}][ style="$style"][ position="$position"]
end

def type(properties & appDirectory) trigger(common)
	[ icon="$icon"][ visible={$visible}][ style="$style"]
end

def type(properties & digitalsignature) trigger(common)
	[ text="$text"][ visible={$visible}][ style="$style"]
end

def type(properties & dashboard) trigger(common)
	[ width="$width"][ height="$height"][ style="$style"]
end

def type(properties) trigger(common)
	[ name="$name"][ label="$label"][ format="$format...[ ]"][ color="$color"][ visible={$visible}][ traceable={$traceable}][ multiple={{instances:"$instances",arrangement:"$multipleArrangement",noItemsMessage:"$multipleNoItemsMessage",spacing:$multipleSpacing,editable:$multipleEditable,wrap:$multipleWrapItems,collapsed:$multipleCollapsed,count:{min:$multipleMin,max:$multipleMax}}}][ style="$style"]
end

def type(properties & openpopover) trigger(specific)
	[ triggerEvent="$triggerEvent"]
end

def type(properties & digitalsignature & autofirma) trigger(specific)
	[ signFormat="$signFormat"]
end

def type(properties & template) trigger(specific)
	[ layout="$layout...[ ]"][ width="$width"][ height="$height"][ spacing="$spacing"]
end

def type(properties & basestamp) trigger(specific)
	[ spacing="$spacing"]
end

def type(properties & materialicon) trigger(specific)
	[ icon="$icon"]
end

def type(properties & selector) trigger(specific)
	[ multipleSelection={$multipleSelection}][ readonly={$readonly}][ focused={$focused}][ placeholder="$placeholder"][ selected="$selected"][ layout="$layout"][ size="$size"][ maxMenuHeight={$maxMenuHeight}][ allowOther="$allowOther"][ scrollButtons="$scrollButtons"][ view="$view"]
end

def type(properties & image) trigger(specific)
	[ width="$width"][ height="$height"][ mobileReduceFactor={$mobileReduceFactor}][ allowFullscreen={$allowFullscreen}]
end

def type(properties & file) trigger(specific)
	[ width="$width"][ height="$height"][ preview={$preview}][ dropZone={$dropZone}][ maxSize={$maxSize}][ allowedTypes={$[$allowedTypes$]}]
end

def type(properties & chart) trigger(specific)
	[ width="$width"][ height="$height"]
end

def type(properties & alertdialog) trigger(specific)
	[ title="$title"][ modal={$modal}][ fullscreen={$fullscreen}][ message="$message"][ closeLabel="$closeLabel"][ acceptLabel="$acceptLabel"][ width="$width"][ height="$height"][ animation={{mode:"$mode",direction:"$transitionDirection",duration:"$transitionDuration"}}]
end

def type(properties & abstractdialog) trigger(specific)
	[ title="$title"][ modal={$modal}][ fullscreen={$fullscreen}][ width="$width"][ height="$height"][ animation={{mode:"$mode",direction:"$transitionDirection",duration:"$transitionDuration"}}]
end

def type(properties & block) trigger(specific)
	[ layout="$layout...[ ]"][ width="$width"][ height="$height"][ spacing="$spacing"][ $paper][ $badge][ $drawer][ $popover][ animation={{mode:"$mode",direction:"$transitionDirection",duration:"$transitionDuration"}}][ hidden="$hidden"][ splitMobileLabel="$splitMobileLabel"][ autoSize={$autoSize}]
end

def type(properties & date) trigger(specific)
	[ pattern="$pattern"][ mode="$mode"][ value={new Date($value)}][ timePicker={$timePicker}][ mask="$mask"][ embedded={$embedded}][ allowEmpty={$allowEmpty}][ views={$["$view...[","]"$]}]
end

def type(properties & user) trigger(specific)
	[ mode="$mode"]
end

def type(properties & number) trigger(specific)
	[ value={$value}][ prefix="$prefix"][ suffix="$suffix"][ min={$min}][ max={$max}][ step={$step}][ readonly={$readonly}][ focused={$focused}][ decimals={$decimals}][ expanded={$expanded}][ helperText="$helperText"]
end

def type(properties & header) trigger(specific)
	[ position="$position"][ width="$width"][ height="$height"][ elevation={$elevation}]
end

def type(properties & code) trigger(specific)
	[ mode="$mode"][ language="$language"][ highlighted=$highlighted]
end

def type(properties & text) trigger(specific)
	[ mode="$mode"][ editionMode="$editionMode"][ maxLength={$maxLength}][ rows={$rows}][ prefix="$prefix"][ suffix="$suffix"][ translate={$translate}][ cropWithEllipsis={$cropWithEllipsis}][ value="$defaultValue"][ placeholder="$placeholder"][ readonly={$readonly}][ focused={$focused}][ highlighted={$highlighted}][ type="$type"][ helperText="$helperText"]
end

def type(properties & location) trigger(specific)
	[ center={{lat:$centerLat,lng:$centerLng}}][ zoom={{min:$zoomMin,max:$zoomMax,defaultZoom:$zoomDefault}}][ modes={$["$mode...[","]"$]}][ controls="$controls"]
end

def type(properties & map) trigger(specific)
    [ pageSize={$pageSize}][ type="$type"][ itemHeight={$itemHeight}][ center={{lat:$centerLat,lng:$centerLng}}][ zoom={{min:$zoomMin,max:$zoomMax,defaultZoom:$zoomDefault}}][ controls="$controls"]
end

def type(properties & collection) trigger(specific)
	[ noItemsMessage="$noItemsMessage"][ noItemsFoundMessage="$noItemsFoundMessage"][ pageSize={$pageSize}][ itemHeight={$itemHeight}][ scrollingMark={$scrollingMark}][ navigable="$navigable"][ selection="$selection"]
end

def type(properties & heading) trigger(specific)
	 style={{width:"$width~%",paddingRight:"10px"[,$paddingLeft:"10px"]}}[ hidden="$hidden"]
end

def type(properties & item) trigger(specific)
	 style={{width:"$width~%",paddingRight:"10px"[,$paddingLeft:"10px"]}}[ hidden="$hidden"]
end

def type(properties & spinner) trigger(specific)
	[ mode="$mode"][ size={$size}]
end

def type(properties & switch) trigger(specific)
    [ state="$state"]
end

def type(properties & toggle) trigger(specific)
    [ state="$state"]
end

def type(properties & splitbutton) trigger(specific)
	[ options={$["$option...[","]"$]}][ defaultOption="$default"][ icon="$icon"]
end

def type(properties & export) trigger(specific)
	[ from={$from}][ to={$to}][ min={$min}][ max={$max}][ range={{min:$rangeMin,max:$rangeMax}}][ options={$["$option...[","]"$]}]
end

def type(properties & download) trigger(specific)
	[ options={$["$option...[","]"$]}]
end

def type(properties & download & selection) trigger(specific)
	[ options={$["$option...[","]"$]}]
end

def type(properties & searchbox) trigger(specific)
	[ placeholder="$placeholder"][ showCountMessage="$showCountMessage"]
end

def type(properties & slider) trigger(specific)
    [ range={{min:$min,max:$max}}][ value={$value}]
end

def type(properties & grouping) trigger(specific)
    [ pageSize={$pageSize}][ placeholder="$placeholder"]
end

def type(properties & stepper) trigger(specific)
   [ orientation="$orientation+lowercase"][ position="$position+lowercase"]
end

def type(properties & frame) trigger(specific)
   [ width="$width"][ height="$height"][ url="$url"]
end

def type(properties & sorting) trigger(specific)
	[ mode="$mode"][ align="$align"]
end

def type(properties & htmlviewer) trigger(specific)
	[ content="$content"]
end

def type(properties & microsite) trigger(specific)
    [ downloadOperations={$["$downloadOperation...[","]"$]}]
end

def type(properties) trigger(specific)
end

def type(badge)
	mode="$mode"[ value={$value}][ max={$max}][ showZero={$showZero}]
end

def type(drawer)
	position="$position" variant="$variant"
end

def type(popover)
	position="$position"
end

def type(code)
	value="$value"
end

def type(highlighted)
	{text:"$text",background:"$background"}
end

def type(actionableMode)
	$mode
end

def type(histogram)
	{alwaysVisible:$alwaysVisible,type:"$type"}
end
