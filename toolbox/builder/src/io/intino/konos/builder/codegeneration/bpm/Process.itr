def type(process & src)
	package $package+validPackage.bpm;

	import io.intino.alexandria.bpm.Task;
	import io.intino.alexandria.bpm.Task.Type.*;
	import io.intino.alexandria.message.MessageHub;
	import $package+validPackage.$box+FirstUpperCase~Box;

	public class $name+firstUpperCase extends Abstract$name+firstUpperCase {
		private $box+FirstUpperCase~Box box;

		$name+firstUpperCase($box+FirstUpperCase~Box box, String id) {
			super(box.messageHub(), id);
			this.box = box;
		}

		$state+task...[$NL$NL]
	}
end

def type(process)
	package $package+validPackage.bpm;

	import static io.intino.alexandria.bpm.State.Type.*;
    import io.intino.alexandria.message.MessageHub;

    import java.util.List;

    import static io.intino.alexandria.bpm.Link.Type.*;

    public abstract class Abstract$name+firstUpperCase extends io.intino.alexandria.bpm.Process {

    	protected MessageHub messageHub;

		Abstract$name+firstUpperCase(MessageHub messageHub, String id) {
			super(id);
			this.messageHub = messageHub;
			$state...[$NL]
			$link...[$NL]
		}

		@Override
		public String name() {
			return "$name+firstUpperCase";
		}

		$state+method...[$NL$NL]
	}
end

def type(callActivity) trigger(method)
	private io.intino.alexandria.bpm.Task $name+firstLowerCase() {
		return new io.intino.alexandria.bpm.Task($taskType) {
			@Override
			public String execute() {
				messageHub.sendMessage("ProcessStatus", new io.intino.alexandria.bpm.ProcessStatus(java.util.UUID.randomUUID().toString(), "$taskName", "Enter", id(), id(), "$name").message());
				return "Subprocess called $taskName";
			}
		};
	}
end

def !type(callActivity) trigger(method)
	protected abstract io.intino.alexandria.bpm.Task $name+firstLowerCase();
end

def trigger(state)
	addState(new io.intino.alexandria.bpm.State("$name", $name+firstLowerCase()[, $type+logercase+FirstUpperCase]));
end

def trigger(link)
	addLink(new io.intino.alexandria.bpm.Link("$from", "$to", $type+linkType));
end

def !type(callActivity) trigger(task)
	protected Task $name+firstLowerCase() {
		return new Task($taskType) {
			@Override
			public String execute() {
				return null;
			}
		};
	}
end

def attribute(this:CallActivity) trigger(taskType)
	io.intino.alexandria.bpm.Task.Type.CallActivity
end

def attribute(this:DefaultLine) trigger(linkType)
	io.intino.alexandria.bpm.Link.Type.Default
end

def attribute(this:Exclusive) trigger(linkType)
	io.intino.alexandria.bpm.Link.Type.Exclusive
end

def trigger(linkType)
	io.intino.alexandria.bpm.Link.Type.Inclusive
end

def attribute(this:User) trigger(taskType)
	io.intino.alexandria.bpm.Task.Type.Manual
end

def attribute(this:Manual) trigger(taskType)
	io.intino.alexandria.bpm.Task.Type.Manual
end

def attribute(this:Service) trigger(taskType)
	io.intino.alexandria.bpm.Task.Type.CallActivity
end

def trigger(taskType)
	io.intino.alexandria.bpm.Task.Type.Automatic
end