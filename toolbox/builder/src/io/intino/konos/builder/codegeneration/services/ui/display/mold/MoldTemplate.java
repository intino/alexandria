package io.intino.konos.builder.codegeneration.services.ui.display.mold;

import io.intino.itrules.RuleSet;
import io.intino.itrules.Template;

public class MoldTemplate extends Template {

	public RuleSet ruleSet() {
		return new RuleSet().add(
				rule().condition((type("mold"))).output(literal("package ")).output(mark("package")).output(literal(".displays;\n\nimport io.intino.alexandria.ui.services.push.UISession;\nimport ")).output(mark("package", "validPackage")).output(literal(".")).output(mark("box", "firstUpperCase")).output(literal("Box;\n\nimport java.net.URL;\nimport java.util.List;\n\npublic class ")).output(mark("name", "FirstUpperCase")).output(literal(" extends Abstract")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\n\tpublic ")).output(mark("name", "FirstUpperCase")).output(literal("(")).output(mark("box", "FirstUpperCase")).output(literal("Box box) {\n\t\tsuper(box);\n\t}\n\n\tpublic static class Stamps {\n\t\t")).output(mark("block", "stamps").multiple("\n\n")).output(literal("\n\t}\n\n\tpublic static class Blocks {\n\t\t")).output(mark("block").multiple("\n")).output(literal("\n\t}\n}")),
				rule().condition((type("block")), (trigger("stamps"))).output(mark("stamp").multiple("\n")).output(literal("\n")).output(mark("block", "stamps").multiple("\n")).output(literal("\n")).output(expression().output(mark("blockClassName"))),
				rule().condition((trigger("block"))).output(mark("hidden")).output(literal("\n")).output(mark("block").multiple("\n")).output(literal("\n")).output(expression().output(mark("blockClassName"))),
				rule().condition((trigger("hidden"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\tpublic static boolean hidden(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", UISession session) {\n\t\treturn false;//TODO\n\t}\n}")),
				rule().condition((allTypes("stamp", "opendialogoperation"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n}")),
				rule().condition((allTypes("openexternaldialogoperation", "stamp"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n\n\tpublic static String dialogPath(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", UISession session) {\n\t\treturn null;//TODO\n\t}\n\n\tpublic static String dialogTitle(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", UISession session) {\n\t\treturn null;//by default is set to operation label\n\t}\n}")),
				rule().condition((allTypes("stamp", "opencatalogoperation"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n\n\t")).output(expression().output(mark("catalogFilter"))).output(literal("\n\n\t")).output(expression().output(mark("openCatalogOperationExecution"))).output(literal("\n}")),
				rule().condition((allTypes("stamp", "downloadoperation"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n\n\tpublic static io.intino.alexandria.ui.Resource execute(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", String option, UISession session) {\n\t\treturn null;//TODO\n\t}\n}")),
				rule().condition((allTypes("stamp", "previewoperation"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n\n\tpublic static java.net.URL preview(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", UISession session) {\n\t\treturn null;//TODO\n\t}\n}")),
				rule().condition((allTypes("stamp", "taskoperation"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n\n\tpublic static io.intino.alexandria.ui.model.mold.StampResult execute(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", String selfId, UISession session) {\n\t\treturn io.intino.alexandria.ui.model.mold.StampResult.none();\n\t}\n}")),
				rule().condition((allTypes("stamp", "exportoperation"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n\n\tpublic static io.intino.alexandria.ui.Resource execute(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", java.time.Instant from, java.time.Instant to, String option, UISession session) {\n\t\treturn null;//TODO\n\t}\n}")),
				rule().condition((allTypes("stamp", "location"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n\n\tpublic static java.net.URL icon(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", UISession session) {\n\t\treturn null;//TODO\n\t}\n}")),
				rule().condition((allTypes("cataloglink", "stamp"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n\n\t")).output(expression().output(mark("filter"))).output(literal("\n\t")).output(expression().output(mark("itemLoader"))).output(literal("\n}")),
				rule().condition((allTypes("stamp", "picture"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n\n\t")).output(expression().output(mark("avatarProperties"))).output(literal("\n}")),
				rule().condition((allTypes("highlight", "stamp"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n}")),
				rule().condition((allTypes("embeddeddisplay", "stamp"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n\n\t")).output(mark("displayBuilder")).output(literal("\n}")),
				rule().condition((allTypes("stamp", "catalogtimerange"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n}")),
				rule().condition((allTypes("catalogtimerangenavigator", "stamp"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n}")),
				rule().condition((allTypes("catalogtime", "stamp"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n}")),
				rule().condition((allTypes("catalogtimenavigator", "stamp"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n}")),
				rule().condition((allTypes("embeddedcatalog", "stamp"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n\n\t")).output(expression().output(mark("catalogFilter"))).output(literal("\n}")),
				rule().condition((allTypes("icon", "stamp"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n\n\tpublic static String title(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", UISession session) {\n\t\treturn \"\";//TODO\n\t}\n}")),
				rule().condition((allTypes("itemlinks", "stamp"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n\n\tpublic static String title(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", UISession session) {\n\t\treturn \"\";//TODO\n\t}\n}")),
				rule().condition((type("stamp"))).output(literal("public static class ")).output(mark("name", "FirstUpperCase")).output(literal(" {\n\t")).output(mark("common")).output(literal("\n}")),
				rule().condition((trigger("common"))).output(literal("\n")).output(mark("valueMethod")).output(literal("\n")).output(expression().output(mark("editable"))).output(literal("\n\n")).output(expression().output(mark("labelLoader"))).output(literal("\n\n")).output(expression().output(mark("style"))).output(literal("\n\n")).output(expression().output(mark("className"))).output(literal("\n\n")).output(expression().output(mark("color"))),
				rule().condition((trigger("labelloader"))).output(literal("public static String label(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", UISession session) {\n\treturn \"\";//TODO\n}")),
				rule().condition((trigger("style"))).output(literal("public static String style(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", UISession session) {\n\treturn \"\";//TODO\n}")),
				rule().condition((trigger("classname"))).output(literal("public static String className(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", UISession session) {\n\treturn \"\";//TODO\n}")),
				rule().condition((trigger("catalogfilter"))).output(literal("public static boolean filter(")).output(mark("box")).output(literal("Box box, io.intino.alexandria.ui.model.Element element, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", Object target, UISession session) {\n\treturn true;//TODO\n}")),
				rule().condition((trigger("opencatalogoperationexecution"))).output(literal("public static io.intino.alexandria.ui.model.mold.StampResult execute(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", List<Object> selection, UISession session) {\n\treturn io.intino.alexandria.ui.model.mold.StampResult.none();\n}")),
				rule().condition((trigger("filter"))).output(literal("public static boolean filter(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", Object target, UISession session) {\n\treturn true;//TODO\n}")),
				rule().condition((trigger("itemloader"))).output(literal("public static String item(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", UISession session) {\n\treturn null;//TODO return item to open\n}")),
				rule().condition((trigger("displaybuilder"))).output(literal("public static io.intino.alexandria.ui.displays.AlexandriaStamp buildDisplay(")).output(mark("box")).output(literal("Box box, String name, UISession session) {\n\treturn null;//TODO\n}")),
				rule().condition((trigger("editable"))).output(literal("public static io.intino.alexandria.ui.model.mold.StampResult onChange(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", String value, UISession session) {\n\treturn StampResult.none();\n}\npublic static String onValidate(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", String value, UISession session) {\n\treturn null;\n}")),
				rule().condition((trigger("valuemethod"))).output(literal("public static ")).output(mark("valueType")).output(literal(" value(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", UISession session) {\n\treturn null;//TODO\n}")),
				rule().condition((trigger("color"))).output(literal("public static io.intino.alexandria.ui.model.mold.Stamp.Color color(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", UISession session) {\n\treturn null;//TODO\n}")),
				rule().condition((trigger("avatarproperties"))).output(literal("public static io.intino.alexandria.ui.model.mold.stamps.Picture.AvatarProperties avatarProperties(")).output(mark("box")).output(literal("Box box, ")).output(mark("moldClass")).output(literal(" ")).output(mark("moldClass", "shortType", "firstLowerCase")).output(literal(", UISession session) {\n\treturn null;//TODO\n}")),
				rule().condition((attribute("resource")), (trigger("valuetype"))).output(literal("java.net.URL")),
				rule().condition((attribute("breadcrumbs")), (trigger("valuetype"))).output(literal("io.intino.alexandria.ui.model.mold.stamps.Tree")),
				rule().condition((attribute("cardwallet")), (trigger("valuetype"))).output(literal("io.intino.alexandria.ui.model.mold.stamps.Wallet")),
				rule().condition((attribute("timeline")), (trigger("valuetype"))).output(literal("io.intino.alexandria.ui.model.mold.stamps.Timeline")),
				rule().condition((attribute("pie")), (trigger("valuetype"))).output(literal("io.intino.alexandria.ui.model.mold.stamps.Pie")),
				rule().condition((attribute("histogram")), (trigger("valuetype"))).output(literal("io.intino.alexandria.ui.model.mold.stamps.Histogram")),
				rule().condition((attribute("itemlinks")), (trigger("valuetype"))).output(literal("io.intino.alexandria.ui.model.mold.stamps.Links")),
				rule().condition((attribute("picture")), (trigger("valuetype"))).output(literal("java.util.List<java.net.URL>")),
				rule().condition((attribute("rating")), (trigger("valuetype"))).output(literal("java.lang.Double")),
				rule().condition((trigger("valuetype"))).output(literal("java.lang.String"))
		);
	}
}