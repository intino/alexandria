def type(messaging)
	package $package;

	import io.intino.alexandria.terminal.Connector;
	import io.intino.alexandria.logger.Logger;

	import java.io.ByteArrayOutputStream;
	import java.io.IOException;
	import java.io.InputStream;
	$schemaImport

	public class $name+firstUpperCase~Service {
		private final $box+firstUpperCase~Box box;
		private final $box+firstUpperCase~Configuration configuration;
		private final Connector connector;

		public $name+firstUpperCase~Service(Connector connector, $box+firstUpperCase~Box box) {
			this.box = box;
			this.configuration = box.configuration();
			this.connector = connector;
			$request...[$NL]
		}
	}
end

def type(request)
	connector.attachListener($path+format, (r, c) -> new $package.requests.$name+firstUpperCase~Request(box, connector, c).accept(r));
end

def type(path) trigger(format)
	"$name"[$custom...[]]
end

def trigger(custom)
	.replace("{$value}", configuration.get("$value"))
end