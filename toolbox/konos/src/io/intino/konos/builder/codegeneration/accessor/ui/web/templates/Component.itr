rule type(reference)
	<Displays$name+firstUppercase context={this._context.bind(this)} owner={this._owner.bind(this)} id="<<$parentPath~.>>$id"$properties+common$properties+specific></Displays$name+firstUppercase>

rule type(child) and trigger(declaration)

rule type(block, child) and trigger(child)
	$value

rule type(child) and trigger(child)
	$value

rule type(child) and trigger(add)

rule type(component, child, item)

rule type(component, child)
	<$extends context={this._context.bind(this)} owner={this._owner.bind(this)} id="<<$parentPath~.>>$id"$properties+common$properties+specific<< $code>>~>
		<<$reference...[$NL]>>
		<<$methods>>
		<<$component+child...[$NL]>>
	<<~</$extends>~>>

rule type(extends, multiple, image)
	UiMultipleImage

rule type(extends, multiple)
	UiMultiple

rule type(extends, displaystamp)
	Ui$type+firstUpperCase$facet...[]

rule type(extends, proxystamp)
	UiProxyStamp

rule type(extends, basestamp)
	Displays$type+firstUpperCase

rule type(extends)
	Ui$type+firstUpperCase$facet...[]

rule type(facet)
	$name+firstUpperCase

rule type(method)

rule type(properties, actionable) and trigger(common)
	<< title="$title">><< name="$name">><< target="$target">><< mode="$actionableMode">><< icon="$icon">><< titlePosition="$titlePosition">><< affirmed="$affirmed">><< traceable={$traceable}>><< signed={{mode:"$signMode",text:"$signText",reason:"$reasonText"}}>><< readonly={$readonly}>><< size="$size">><< format="$format...[ ]">><< highlighted="$highlighted">><< visible={$visible}>><< style="$style">><< color="$color">><< shortcut={$shortcut}>>

rule type(properties, abstractslider) and trigger(common)
	<< label="$label">><< format="$format...[ ]">><< color="$color">><< traceable={$traceable}>><< arrangement="$arrangement">><< animation={{interval:$interval,loop:$loop}}>><< readonly={$readonly}>><< visible={$visible}>><< style="$style">><< position="$position">>

rule type(properties, appDirectory) and trigger(common)
	<< icon="$icon">><< visible={$visible}>><< style="$style">>

rule type(properties, dashboard) and trigger(common)
	<< width="$width">><< height="$height">><< style="$style">>

rule type(properties) and trigger(common)
	<< name="$name">><< label="$label">><< format="$format...[ ]">><< color="$color">><< darkColor="$darkColor">><< backgroundColor="$backgroundColor">><< backgroundDarkColor="$backgroundDarkColor">><< visible={$visible}>><< traceable={$traceable}>><< multiple={{instances:"$instances",arrangement:"$multipleArrangement",noItemsMessage:"$multipleNoItemsMessage",spacing:$multipleSpacing,editable:$multipleEditable,wrap:$multipleWrapItems,collapsed:$multipleCollapsed,count:{min:$multipleMin,max:$multipleMax}}}>><< style="$style">>

rule type(properties, openpopover) and trigger(specific)
	<< triggerEvent="$triggerEvent">>

rule type(properties, signtext) and trigger(specific)
	<< text="$text">><< signFormat="$signFormat">>

rule type(properties, kpi) and trigger(specific)
	<< mode="$mode">><< unit="$unit">><< textColor="$textColor">><< backgroundColor="$backgroundColor">><< highlightedColor="$highlightedColor">><< value="$value">><< size="$size">><< textPosition="$textPosition">>

rule type(properties, chat) and trigger(specific)
	<< view="$view">><< width="$width">><< height="$height">><< messageFlow="$messageFlow">>

rule type(properties, template) and trigger(specific)
	<< layout="$layout...[ ]">><< width="$width">><< height="$height">><< spacing="$spacing">>

rule type(properties, basestamp) and trigger(specific)
	<< spacing="$spacing">>

rule type(properties, materialicon) and trigger(specific)
	<< title="$title">><< icon="$icon">><< titlePosition="$titlePosition">>

rule type(properties, selector) and trigger(specific)
	<< multipleSelection={$multipleSelection}>><< readonly={$readonly}>><< focused={$focused}>><< placeholder="$placeholder">><< selected="$selected">><< layout="$layout">><< size="$size">><< maxMenuHeight={$maxMenuHeight}>><< allowOther="$allowOther">><< scrollButtons="$scrollButtons">><< view="$view">>

rule type(properties, image) and trigger(specific)
	<< width="$width">><< height="$height">><< mobileReduceFactor={$mobileReduceFactor}>><< allowFullscreen={$allowFullscreen}>><< colorInvertedWithDarkMode={$colorInvertedWithDarkMode}>>

rule type(properties, file) and trigger(specific)
	<< width="$width">><< height="$height">><< preview={$preview}>><< dropZone={$dropZone}>><< pasteZone={$pasteZone}>><< maxSize={$maxSize}>><< allowedTypes={[$allowedTypes]}>>

rule type(properties, chart) and trigger(specific)
	<< width="$width">><< height="$height">>

rule type(properties, alertdialog) and trigger(specific)
	<< title="$title">><< modal={$modal}>><< fullscreen={$fullscreen}>><< message="$message">><< closeLabel="$closeLabel">><< acceptLabel="$acceptLabel">><< width="$width">><< height="$height">><< animation={{mode:"$mode",direction:"$transitionDirection",duration:"$transitionDuration"}}>>

rule type(properties, abstractdialog) and trigger(specific)
	<< title="$title">><< modal={$modal}>><< fullscreen={$fullscreen}>><< width="$width">><< height="$height">><< animation={{mode:"$mode",direction:"$transitionDirection",duration:"$transitionDuration"}}>>

rule type(properties, block) and trigger(specific)
	<< layout="$layout...[ ]">><< width="$width">><< height="$height">><< spacing="$spacing">><< $paper>><< $badge>><< $drawer>><< $popover>><< animation={{mode:"$mode",direction:"$transitionDirection",duration:"$transitionDuration"}}>><< hidden="$hidden">><< isHoverContainer="$isHoverContainer">><< splitMobileLabel="$splitMobileLabel">><< autoSize={$autoSize}>>

rule type(properties, date) and trigger(specific)
	<< pattern="$pattern">><< mode="$mode">><< value={new Date($value)}>><< timePicker={$timePicker}>><< mask="$mask">><< embedded={$embedded}>><< allowEmpty={$allowEmpty}>><< views={["$view...[","]"]}>><< shrink={$shrink}>>

rule type(properties, user) and trigger(specific)
	<< mode="$mode">>

rule type(properties, number) and trigger(specific)
	<< value={$value}>><< prefix="$prefix">><< suffix="$suffix">><< min={$min}>><< max={$max}>><< step={$step}>><< readonly={$readonly}>><< focused={$focused}>><< decimals={$decimals}>><< expanded={$expanded}>><< helperText="$helperText">><< shrink={$shrink}>>

rule type(properties, header) and trigger(specific)
	<< position="$position">><< width="$width">><< height="$height">><< elevation={$elevation}>>

rule type(properties, code) and trigger(specific)
	<< mode="$mode">><< language="$language">><< highlighted=$highlighted>>

rule type(properties, text) and trigger(specific)
	<< mode="$mode">><< editionMode="$editionMode">><< maxLength={$maxLength}>><< rows={$rows}>><< prefix="$prefix">><< suffix="$suffix">><< translate={$translate}>><< cropWithEllipsis={$cropWithEllipsis}>><< value="$defaultValue">><< placeholder="$placeholder">><< readonly={$readonly}>><< focused={$focused}>><< highlighted={$highlighted}>><< type="$type">><< helperText="$helperText">><< shrink={$shrink}>>

rule type(properties, location) and trigger(specific)
	<< center={{lat:$centerLat,lng:$centerLng}}>><< zoom={{min:$zoomMin,max:$zoomMax,defaultZoom:$zoomDefault}}>><< modes={["$mode...[","]"]}>><< controls="$controls">>

rule type(properties, map) and trigger(specific)
	<< pageSize={$pageSize}>><< type="$type">><< itemHeight={$itemHeight}>><< center={{lat:$centerLat,lng:$centerLng}}>><< zoom={{min:$zoomMin,max:$zoomMax,defaultZoom:$zoomDefault}}>><< controls="$controls">><< selection="$selection">>

rule type(properties, collection) and trigger(specific)
	<< noItemsMessage="$noItemsMessage">><< noItemsFoundMessage="$noItemsFoundMessage">><< pageSize={$pageSize}>><< itemHeight={$itemHeight}>><< scrollingMark={$scrollingMark}>><< navigable="$navigable">><< selection="$selection">>

rule type(properties, heading) and trigger(specific)
	 style={{width:"$width~%",paddingRight:"10px"<<,$paddingLeft:"10px">>}}<< hidden="$hidden">>

rule type(properties, item) and trigger(specific)
	 style={{width:"$width~%",paddingRight:"10px"<<,$paddingLeft:"10px">>}}<< hidden="$hidden">>

rule type(properties, spinner) and trigger(specific)
	<< mode="$mode">><< size={$size}>>

rule type(properties, switch) and trigger(specific)
	<< state="$state">>

rule type(properties, toggle) and trigger(specific)
	<< state="$state">>

rule type(properties, splitbutton) and trigger(specific)
	<< options={["$option...[","]"]}>><< defaultOption="$default">><< icon="$icon">><< titlePosition="$titlePosition">>

rule type(properties, export) and trigger(specific)
	<< from={$from}>><< to={$to}>><< min={$min}>><< max={$max}>><< range={{min:$rangeMin,max:$rangeMax}}>><< options={["$option...[","]"]}>>

rule type(properties, download) and trigger(specific)
	<< options={["$option...[","]"]}>>

rule type(properties, download, selection) and trigger(specific)
	<< options={["$option...[","]"]}>>

rule type(properties, searchbox) and trigger(specific)
	<< placeholder="$placeholder">><< showCountMessage="$showCountMessage">>

rule type(properties, slider) and trigger(specific)
	<< range={{min:$min,max:$max}}>><< value={$value}>>

rule type(properties, rangeslider) and trigger(specific)
	<< range={{min:$min,max:$max}}>><< value={[$from,$to]}>><< minimumDistance={$minimumDistance}>>

rule type(properties, grouping) and trigger(specific)
	<< pageSize={$pageSize}>><< placeholder="$placeholder">>

rule type(properties, stepper) and trigger(specific)
   << orientation="$orientation+lowercase">><< position="$position+lowercase">>

rule type(properties, frame) and trigger(specific)
   << width="$width">><< height="$height">><< url="$url">>

rule type(properties, sorting) and trigger(specific)
	<< mode="$mode">><< align="$align">>

rule type(properties, htmlviewer) and trigger(specific)
	<< content="$content">>

rule type(properties, timeline) and trigger(specific)
	<< mode="$mode">>

rule type(properties, documenteditor, collabora) and trigger(specific)
	<< editorUrl="$editorUrl">><< accessToken="$accessToken">>

rule type(properties, eventline) and trigger(specific)
	<< arrangement="$arrangement">>
	<< toolbarArrangement="$toolbarArrangement">>

rule type(properties, microsite) and trigger(specific)
	<< downloadOperations={["$downloadOperation...[","]"]}>>

rule type(properties) and trigger(specific)

rule type(badge)
	mode="$mode"<< value={$value}>><< max={$max}>><< showZero={$showZero}>>

rule type(drawer)
	position="$position" variant="$variant"

rule type(popover)
	position="$position"

rule type(code)
	value="$value"

rule type(highlighted)
	{text:"$text",background:"$background"}

rule type(actionableMode)
	$mode

rule type(histogram)
	{alwaysVisible:$alwaysVisible,type:"$type"}

rule type(shortcut)
	{key:"$key",altKey:$altKey,ctrlKey:$ctrlKey,shiftKey:$shiftKey,visible:$visible}
