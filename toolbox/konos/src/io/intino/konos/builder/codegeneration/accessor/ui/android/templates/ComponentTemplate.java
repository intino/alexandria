package io.intino.konos.builder.codegeneration.accessor.ui.android.templates;

import io.intino.itrules.template.Rule;
import io.intino.itrules.template.Template;

import java.util.ArrayList;
import java.util.List;

import static io.intino.itrules.template.condition.predicates.Predicates.*;
import static io.intino.itrules.template.outputs.Outputs.*;

public class ComponentTemplate extends Template {

	public List<Rule> ruleSet() {
		List<Rule> rules = new ArrayList<>();
		rules.add(rule().condition(allTypes("reference")).output(literal("<Displays")).output(placeholder("name", "firstUppercase")).output(literal(" context={this._context.bind(this)} owner={this._owner.bind(this)} id=\"")).output(expression().output(placeholder("parentPath")).output(literal("."))).output(placeholder("id")).output(literal("\"")).output(placeholder("properties", "common")).output(placeholder("properties", "specific")).output(literal("></Displays")).output(placeholder("name", "firstUppercase")).output(literal(">")));
		rules.add(rule().condition(all(allTypes("block", "child"), trigger("transfer"))).output(placeholder("component", "transfer").multiple("\n")));
		rules.add(rule().condition(all(allTypes("header", "child"), trigger("transfer"))).output(literal("val ")).output(placeholder("parentPath", "dotsWithUnderscore")).output(literal("_")).output(placeholder("id")).output(literal(" = findViewById<")).output(placeholder("extends")).output(literal("<*, *>>(R.id.")).output(expression().output(placeholder("parentPath", "dotsWithUnderscore")).output(literal("_"))).output(placeholder("id")).output(literal(")\n")).output(placeholder("parentPath", "dotsWithUnderscore")).output(literal("_")).output(placeholder("id")).output(literal(".transfer(listOf(")).output(placeholder("component", "transferFind").multiple(",")).output(literal("))\n")).output(placeholder("component", "transfer").multiple("\n")));
		rules.add(rule().condition(all(allTypes("selector", "child"), trigger("transfer"))).output(literal("val ")).output(placeholder("parentPath", "dotsWithUnderscore")).output(literal("_")).output(placeholder("id")).output(literal(" = findViewById<")).output(placeholder("extends")).output(literal("<*, *>>(R.id.")).output(expression().output(placeholder("parentPath", "dotsWithUnderscore")).output(literal("_"))).output(placeholder("id")).output(literal(")\n")).output(placeholder("parentPath", "dotsWithUnderscore")).output(literal("_")).output(placeholder("id")).output(literal(".transfer(listOf(")).output(placeholder("component", "transferFind").multiple(",")).output(literal("))\n")).output(placeholder("component", "transfer").multiple("\n")));
		rules.add(rule().condition(all(allTypes("child"), trigger("transfer"))));
		rules.add(rule().condition(all(allTypes("child", "basestamp"), trigger("transferfind"))).output(literal("findViewById<")).output(placeholder("extends")).output(literal("<*, *>>(R.id.")).output(expression().output(placeholder("parentPath", "dotsWithUnderscore")).output(literal("_"))).output(placeholder("id")).output(literal(")")));
		rules.add(rule().condition(all(allTypes("child"), trigger("transferfind"))).output(literal("findViewById<")).output(placeholder("extends")).output(literal("<*, *>>(R.id.")).output(expression().output(placeholder("parentPath", "dotsWithUnderscore")).output(literal("_"))).output(placeholder("id")).output(literal(")")));
		rules.add(rule().condition(all(allTypes("child"), trigger("declaration"))));
		rules.add(rule().condition(all(allTypes("block", "child"), trigger("child"))).output(placeholder("value")));
		rules.add(rule().condition(all(allTypes("child"), trigger("child"))).output(placeholder("value")));
		rules.add(rule().condition(all(allTypes("child"), trigger("add"))));
		rules.add(rule().condition(allTypes("component", "child", "item")));
		rules.add(rule().condition(allTypes("component", "child")).output(literal("<")).output(placeholder("extends")).output(literal(" android:id=\"@+id/")).output(expression().output(placeholder("parentPath", "<missing ID>")).output(literal("."))).output(placeholder("id")).output(literal("\"")).output(expression().output(literal(" android:layout_height=\"wrap_content\" android:layout_width=\"wrap_content\""))).output(placeholder("properties", "common")).output(placeholder("properties", "specific")).output(expression().output(literal(" ")).output(placeholder("code"))).output(literal(">\n\t")).output(expression().output(placeholder("reference").multiple("\n"))).output(literal("\n\t")).output(expression().output(placeholder("methods"))).output(literal("\n\t")).output(expression().output(placeholder("component", "child").multiple("\n"))).output(literal("\n")).output(expression().output(literal("</")).output(placeholder("extends")).output(literal(">"))));
		rules.add(rule().condition(allTypes("extends", "multiple", "image")).output(literal("io.intino.alexandria.mobile.android.displays.components.MultipleImage")));
		rules.add(rule().condition(allTypes("extends", "multiple")).output(literal("io.intino.alexandria.mobile.android.displays.components.Multiple")));
		rules.add(rule().condition(allTypes("extends", "displaystamp")).output(literal("io.intino.alexandria.mobile.android.displays.components.")).output(placeholder("type", "firstUpperCase")).output(placeholder("facet").multiple("")));
		rules.add(rule().condition(allTypes("extends", "proxystamp")).output(literal("io.intino.alexandria.mobile.android.displays.components.ProxyStamp")));
		rules.add(rule().condition(allTypes("extends", "basestamp")).output(placeholder("package")).output(literal(".mobile.android.displays.templates.")).output(placeholder("type", "firstUpperCase")));
		rules.add(rule().condition(allTypes("extends")).output(literal("io.intino.alexandria.mobile.android.displays.components.")).output(placeholder("type", "firstUpperCase")).output(placeholder("facet").multiple("")));
		rules.add(rule().condition(allTypes("facet")).output(placeholder("name", "firstUpperCase")));
		rules.add(rule().condition(allTypes("method")));
		rules.add(rule().condition(all(allTypes("properties", "actionable"), trigger("common"))).output(expression().output(literal(" alexandria:actionable_title=\"")).output(placeholder("title")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_name=\"")).output(placeholder("name")).output(literal("\""))).output(expression().output(literal(" alexandria:actionable_target=\"")).output(placeholder("target")).output(literal("\""))).output(expression().output(literal(" alexandria:actionable_mode=\"")).output(placeholder("actionableMode")).output(literal("\""))).output(expression().output(literal(" alexandria:actionable_icon=\"")).output(placeholder("icon")).output(literal("\""))).output(expression().output(literal(" alexandria:actionable_affirmed=\"")).output(placeholder("affirmed")).output(literal("\""))).output(expression().output(literal(" alexandria:actionable_traceable=\"")).output(placeholder("traceable")).output(literal("\""))).output(expression().output(literal(" alexandria:actionable_signed=\"{'mode':'")).output(placeholder("signMode")).output(literal("','text':'")).output(placeholder("signText")).output(literal("','reason':'")).output(placeholder("reasonText")).output(literal("'}\""))).output(expression().output(literal(" alexandria:actionable_readonly=\"")).output(placeholder("readonly")).output(literal("\""))).output(expression().output(literal(" alexandria:actionable_size=\"")).output(placeholder("size")).output(literal("\""))).output(expression().output(literal(" style=\"@style/")).output(placeholder("format").multiple("_")).output(literal("\""))).output(expression().output(literal(" alexandria:actionable_highlighted=\"")).output(placeholder("highlighted")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_visible=\"")).output(placeholder("visible")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_style=\"")).output(placeholder("style")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_color=\"")).output(placeholder("color")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "abstractslider"), trigger("common"))).output(expression().output(literal(" alexandria:alexandria_label=\"")).output(placeholder("label")).output(literal("\""))).output(expression().output(literal(" style=\"@style/")).output(placeholder("format").multiple("_")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_color=\"")).output(placeholder("color")).output(literal("\""))).output(expression().output(literal(" alexandria:abstract_slider_traceable=\"")).output(placeholder("traceable")).output(literal("\""))).output(expression().output(literal(" alexandria:abstract_slider_arrangement=\"")).output(placeholder("arrangement")).output(literal("\""))).output(expression().output(literal(" alexandria:abstract_slider_animation=\"{interval:")).output(placeholder("interval")).output(literal(",loop:")).output(placeholder("loop")).output(literal("}\""))).output(expression().output(literal(" alexandria:abstract_slider_readonly=\"")).output(placeholder("readonly")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_visible=\"")).output(placeholder("visible")).output(literal("\""))).output(expression().output(literal(" alexandria:abstract_slider_style=\"")).output(placeholder("style")).output(literal("\""))).output(expression().output(literal(" alexandria:abstract_slider_position=\"")).output(placeholder("position")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "appDirectory"), trigger("common"))).output(expression().output(literal(" alexandria:app_directory_icon=\"")).output(placeholder("icon")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_visible=\"")).output(placeholder("visible")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_style=\"")).output(placeholder("style")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "dashboard"), trigger("common"))).output(expression().output(literal(" alexandria:dashboard_width=\"")).output(placeholder("width")).output(literal("\""))).output(expression().output(literal(" alexandria:dashboard_height=\"")).output(placeholder("height")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_style=\"")).output(placeholder("style")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties"), trigger("common"))).output(expression().output(literal(" alexandria:alexandria_name=\"")).output(placeholder("name")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_label=\"")).output(placeholder("label")).output(literal("\""))).output(expression().output(literal(" style=\"@style/")).output(placeholder("format").multiple("_")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_color=\"")).output(placeholder("color")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_visible=\"")).output(placeholder("visible")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_traceable=\"")).output(placeholder("traceable")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_multiple_instances=\"")).output(placeholder("instances")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_multiple_arrangement=\"")).output(placeholder("multipleArrangement")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_multiple_no_items_message=\"")).output(placeholder("multipleNoItemsMessage")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_multiple_spacing=\"")).output(placeholder("multipleSpacing")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_multiple_editable=\"")).output(placeholder("multipleEditable")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_multiple_wrap=\"")).output(placeholder("multipleWrapItems")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_multiple_collapsed=\"")).output(placeholder("multipleCollapsed")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_multiple_count_min=\"")).output(placeholder("multipleMin")).output(literal("\""))).output(expression().output(literal(" alexandria:alexandria_multiple_count_max=\"")).output(placeholder("multipleMax")).output(literal("\""))).output(expression().output(literal(" alexandria:alignContent=\"")).output(placeholder("multipleAlign")).output(literal("\" alexandria:alignItems=\"")).output(placeholder("multipleAlign")).output(literal("\" alexandria:showDivider=\"middle\""))).output(expression().output(literal(" alexandria:alexandria_style=\"")).output(placeholder("style")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "openpopover"), trigger("specific"))).output(expression().output(literal(" alexandria:open_popover_trigger_event=\"")).output(placeholder("triggerEvent")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "signtext"), trigger("specific"))).output(expression().output(literal(" alexandria:sign_text_content=\"")).output(placeholder("text")).output(literal("\""))).output(expression().output(literal(" alexandria:sign_text_format=\"")).output(placeholder("signFormat")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "template"), trigger("specific"))).output(expression().output(literal(" alexandria:template_layout=\"")).output(placeholder("layout").multiple(" ")).output(literal("\""))).output(expression().output(literal(" alexandria:template_width=\"")).output(placeholder("width")).output(literal("\""))).output(expression().output(literal(" alexandria:template_height=\"")).output(placeholder("height")).output(literal("\""))).output(expression().output(literal(" alexandria:template_spacing=\"")).output(placeholder("spacing")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "basestamp"), trigger("specific"))).output(expression().output(literal(" alexandria:base_stamp_spacing=\"")).output(placeholder("spacing")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "materialicon"), trigger("specific"))).output(expression().output(literal(" alexandria:material_icon_icon=\"")).output(placeholder("icon")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "selector"), trigger("specific"))).output(expression().output(literal(" alexandria:selector_multiple_selection=\"")).output(placeholder("multipleSelection")).output(literal("\""))).output(expression().output(literal(" alexandria:selector_readonly=\"")).output(placeholder("readonly")).output(literal("\""))).output(expression().output(literal(" alexandria:selector_focused=\"")).output(placeholder("focused")).output(literal("\""))).output(expression().output(literal(" alexandria:selector_placeholder=\"")).output(placeholder("placeholder")).output(literal("\""))).output(expression().output(literal(" alexandria:selector_selected=\"")).output(placeholder("selected")).output(literal("\""))).output(expression().output(literal(" alexandria:selector_layout=\"")).output(placeholder("layout")).output(literal("\""))).output(expression().output(literal(" alexandria:selector_size=\"")).output(placeholder("size")).output(literal("\""))).output(expression().output(literal(" alexandria:selector_max_menu_height=\"")).output(placeholder("maxMenuHeight")).output(literal("\""))).output(expression().output(literal(" alexandria:selector_allow_other=\"")).output(placeholder("allowOther")).output(literal("\""))).output(expression().output(literal(" alexandria:selector_scroll_buttons=\"")).output(placeholder("scrollButtons")).output(literal("\""))).output(expression().output(literal(" alexandria:selector_view=\"")).output(placeholder("view")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "image"), trigger("specific"))).output(expression().output(literal(" alexandria:image_width=\"")).output(placeholder("width")).output(literal("\""))).output(expression().output(literal(" alexandria:image_height=\"")).output(placeholder("height")).output(literal("\""))).output(expression().output(literal(" alexandria:image_mobile_reduce_factor=\"")).output(placeholder("mobileReduceFactor")).output(literal("\""))).output(expression().output(literal(" alexandria:image_allow_full_screen=\"")).output(placeholder("allowFullscreen")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "file"), trigger("specific"))).output(expression().output(literal(" alexandria:file_width=\"")).output(placeholder("width")).output(literal("\""))).output(expression().output(literal(" alexandria:file_height=\"")).output(placeholder("height")).output(literal("\""))).output(expression().output(literal(" alexandria:file_preview=\"")).output(placeholder("preview")).output(literal("\""))).output(expression().output(literal(" alexandria:file_drop_zone=\"")).output(placeholder("dropZone")).output(literal("\""))).output(expression().output(literal(" alexandria:file_max_size=\"")).output(placeholder("maxSize")).output(literal("\""))).output(expression().output(literal(" alexandria:file_allowed_types=\"[")).output(placeholder("allowedTypes")).output(literal("]\""))));
		rules.add(rule().condition(all(allTypes("properties", "chart"), trigger("specific"))).output(expression().output(literal(" alexandria:chart_width=\"")).output(placeholder("width")).output(literal("\""))).output(expression().output(literal(" alexandria:chart_height=\"")).output(placeholder("height")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "alertdialog"), trigger("specific"))).output(expression().output(literal(" alexandria:alert_dialog_title=\"")).output(placeholder("title")).output(literal("\""))).output(expression().output(literal(" alexandria:alert_dialog_modal=\"")).output(placeholder("modal")).output(literal("\""))).output(expression().output(literal(" alexandria:alert_dialog_full_screen=\"")).output(placeholder("fullscreen")).output(literal("\""))).output(expression().output(literal(" alexandria:alert_dialog_message=\"")).output(placeholder("message")).output(literal("\""))).output(expression().output(literal(" alexandria:alert_dialog_close_label=\"")).output(placeholder("closeLabel")).output(literal("\""))).output(expression().output(literal(" alexandria:alert_dialog_accept_label=\"")).output(placeholder("acceptLabel")).output(literal("\""))).output(expression().output(literal(" alexandria:alert_dialog_width=\"")).output(placeholder("width")).output(literal("\""))).output(expression().output(literal(" alexandria:alert_dialog_height=\"")).output(placeholder("height")).output(literal("\""))).output(expression().output(literal(" alexandria:alert_dialog_animation=\"{'mode':'")).output(placeholder("mode")).output(literal("','direction':'")).output(placeholder("transitionDirection")).output(literal("','duration':'")).output(placeholder("transitionDuration")).output(literal("'}\""))));
		rules.add(rule().condition(all(allTypes("properties", "abstractdialog"), trigger("specific"))).output(expression().output(literal(" alexandria:abstract_dialog_title=\"")).output(placeholder("title")).output(literal("\""))).output(expression().output(literal(" alexandria:abstract_dialog_modal=\"")).output(placeholder("modal")).output(literal("\""))).output(expression().output(literal(" alexandria:abstract_dialog_full_screen=\"")).output(placeholder("fullscreen")).output(literal("\""))).output(expression().output(literal(" alexandria:abstract_dialog_width=\"")).output(placeholder("width")).output(literal("\""))).output(expression().output(literal(" alexandria:abstract_dialog_height=\"")).output(placeholder("height")).output(literal("\""))).output(expression().output(literal(" alexandria:abstract_dialog_animation=\"{'mode':'")).output(placeholder("mode")).output(literal("','direction':'")).output(placeholder("transitionDirection")).output(literal("','duration':'")).output(placeholder("transitionDuration")).output(literal("'}\""))));
		rules.add(rule().condition(all(allTypes("properties", "block"), trigger("specific"))).output(expression().output(literal(" alexandria:block_layout=\"")).output(placeholder("layout").multiple(" ")).output(literal("\""))).output(expression().output(literal(" alexandria:block_width=\"")).output(placeholder("width")).output(literal("\""))).output(expression().output(literal(" alexandria:block_height=\"")).output(placeholder("height")).output(literal("\""))).output(expression().output(literal(" alexandria:showDivider=\"middle\""))).output(expression().output(literal(" alexandria:dividerDrawable=\"@drawable/spacing_")).output(placeholder("spacing")).output(literal("\""))).output(expression().output(literal(" alexandria:block_paper=\"")).output(placeholder("paperBoolean")).output(literal("\""))).output(expression().output(literal(" android:background=\"@drawable/")).output(placeholder("paper")).output(literal("\""))).output(expression().output(literal(" ")).output(placeholder("badge"))).output(expression().output(literal(" ")).output(placeholder("drawer"))).output(expression().output(literal(" ")).output(placeholder("popover"))).output(expression().output(literal(" alexandria:block_animation=\"{'mode':'")).output(placeholder("mode")).output(literal("','direction':'")).output(placeholder("transitionDirection")).output(literal("','duration':'")).output(placeholder("transitionDuration")).output(literal("'}\""))).output(expression().output(literal(" alexandria:block_hidden=\"")).output(placeholder("hidden")).output(literal("\""))).output(expression().output(literal(" alexandria:block_auto_size=\"")).output(placeholder("autoSize")).output(literal("\""))).output(expression().output(literal(" android:visibility=\"")).output(placeholder("conditional")).output(literal("gone\""))));
		rules.add(rule().condition(all(allTypes("properties", "date"), trigger("specific"))).output(expression().output(literal(" alexandria:date_pattern=\"")).output(placeholder("pattern")).output(literal("\""))).output(expression().output(literal(" alexandria:date_mode=\"")).output(placeholder("mode")).output(literal("\""))).output(expression().output(literal(" alexandria:date_value=\"new Date(")).output(placeholder("value")).output(literal(")\""))).output(expression().output(literal(" alexandria:date_time_picker=\"")).output(placeholder("timePicker")).output(literal("\""))).output(expression().output(literal(" alexandria:date_mask=\"")).output(placeholder("mask")).output(literal("\""))).output(expression().output(literal(" alexandria:date_embedded=\"")).output(placeholder("embedded")).output(literal("\""))).output(expression().output(literal(" alexandria:date_allow_empty=\"")).output(placeholder("allowEmpty")).output(literal("\""))).output(expression().output(literal(" alexandria:date_views=\"['")).output(placeholder("view").multiple("','")).output(literal("']\""))).output(expression().output(literal(" alexandria:date_shrink=\"")).output(placeholder("shrink")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "user"), trigger("specific"))).output(expression().output(literal(" alexandria:user_mode=\"")).output(placeholder("mode")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "number"), trigger("specific"))).output(expression().output(literal(" alexandria:number_value=\"")).output(placeholder("value")).output(literal("\""))).output(expression().output(literal(" alexandria:number_prefix=\"")).output(placeholder("prefix")).output(literal("\""))).output(expression().output(literal(" alexandria:number_suffix=\"")).output(placeholder("suffix")).output(literal("\""))).output(expression().output(literal(" alexandria:number_min=\"")).output(placeholder("min")).output(literal("\""))).output(expression().output(literal(" alexandria:number_max=\"")).output(placeholder("max")).output(literal("\""))).output(expression().output(literal(" alexandria:number_step=\"")).output(placeholder("step")).output(literal("\""))).output(expression().output(literal(" alexandria:number_readonly=\"")).output(placeholder("readonly")).output(literal("\""))).output(expression().output(literal(" alexandria:number_focused=\"")).output(placeholder("focused")).output(literal("\""))).output(expression().output(literal(" alexandria:number_decimals=\"")).output(placeholder("decimals")).output(literal("\""))).output(expression().output(literal(" alexandria:number_expanded=\"")).output(placeholder("expanded")).output(literal("\""))).output(expression().output(literal(" alexandria:number_helper_text=\"")).output(placeholder("helperText")).output(literal("\""))).output(expression().output(literal(" alexandria:number_shrink=\"")).output(placeholder("shrink")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "header"), trigger("specific"))).output(expression().output(literal(" alexandria:header_position=\"")).output(placeholder("position")).output(literal("\""))).output(expression().output(literal(" alexandria:header_width=\"")).output(placeholder("width")).output(literal("\""))).output(expression().output(literal(" alexandria:header_height=\"")).output(placeholder("height")).output(literal("\""))).output(expression().output(literal(" alexandria:header_elevation=\"")).output(placeholder("elevation")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "code"), trigger("specific"))).output(expression().output(literal(" alexandria:code_mode=\"")).output(placeholder("mode")).output(literal("\""))).output(expression().output(literal(" alexandria:code_language=\"")).output(placeholder("language")).output(literal("\""))).output(expression().output(literal(" alexandria:code_highlighted=")).output(placeholder("highlighted"))));
		rules.add(rule().condition(all(allTypes("properties", "text"), trigger("specific"))).output(expression().output(literal(" alexandria:text_mode=\"")).output(placeholder("mode")).output(literal("\""))).output(expression().output(literal(" alexandria:text_edition_mode=\"")).output(placeholder("editionMode")).output(literal("\""))).output(expression().output(literal(" alexandria:text_max_length=\"")).output(placeholder("maxLength")).output(literal("\""))).output(expression().output(literal(" alexandria:text_rows=\"")).output(placeholder("rows")).output(literal("\""))).output(expression().output(literal(" alexandria:text_prefix=\"")).output(placeholder("prefix")).output(literal("\""))).output(expression().output(literal(" alexandria:text_suffix=\"")).output(placeholder("suffix")).output(literal("\""))).output(expression().output(literal(" alexandria:text_translate=\"")).output(placeholder("translate")).output(literal("\""))).output(expression().output(literal(" alexandria:text_crop_with_ellipsis=\"")).output(placeholder("cropWithEllipsis")).output(literal("\""))).output(expression().output(literal(" alexandria:text_value=\"")).output(placeholder("defaultValue", "escapeHtml")).output(literal("\""))).output(expression().output(literal(" alexandria:text_placeholder=\"")).output(placeholder("placeholder")).output(literal("\""))).output(expression().output(literal(" alexandria:text_readonly=\"")).output(placeholder("readonly")).output(literal("\""))).output(expression().output(literal(" alexandria:text_focused=\"")).output(placeholder("focused")).output(literal("\""))).output(expression().output(literal(" ")).output(placeholder("highlighted"))).output(expression().output(literal(" alexandria:text_type=\"")).output(placeholder("type")).output(literal("\""))).output(expression().output(literal(" alexandria:text_helper_text=\"")).output(placeholder("helperText")).output(literal("\""))).output(expression().output(literal(" alexandria:text_shrink=\"")).output(placeholder("shrink")).output(literal("\""))).output(expression().output(literal(" alexandria:text_pattern=\"")).output(placeholder("pattern")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "location"), trigger("specific"))).output(expression().output(literal(" alexandria:location_center=\"{lat:")).output(placeholder("centerLat")).output(literal(",lng:")).output(placeholder("centerLng")).output(literal("}\""))).output(expression().output(literal(" alexandria:location_zoom=\"{min:")).output(placeholder("zoomMin")).output(literal(",max:")).output(placeholder("zoomMax")).output(literal(",defaultZoom:")).output(placeholder("zoomDefault")).output(literal("}\""))).output(expression().output(literal(" alexandria:location_modes=\"['")).output(placeholder("mode").multiple("','")).output(literal("']\""))).output(expression().output(literal(" alexandria:location_controls=\"")).output(placeholder("controls")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "map"), trigger("specific"))).output(expression().output(literal(" alexandria:map_page_size=\"")).output(placeholder("pageSize")).output(literal("\""))).output(expression().output(literal(" alexandria:map_type=\"")).output(placeholder("type")).output(literal("\""))).output(expression().output(literal(" alexandria:map_item_height=\"")).output(placeholder("itemHeight")).output(literal("\""))).output(expression().output(literal(" alexandria:map_center=\"{lat:")).output(placeholder("centerLat")).output(literal(",lng:")).output(placeholder("centerLng")).output(literal("}\""))).output(expression().output(literal(" alexandria:map_zoom=\"{min:")).output(placeholder("zoomMin")).output(literal(",max:")).output(placeholder("zoomMax")).output(literal(",defaultZoom:")).output(placeholder("zoomDefault")).output(literal("}\""))).output(expression().output(literal(" alexandria:map_controls=\"")).output(placeholder("controls")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "collection"), trigger("specific"))).output(expression().output(literal(" alexandria:collection_no_items_message=\"")).output(placeholder("noItemsMessage")).output(literal("\""))).output(expression().output(literal(" alexandria:map_no_items_found_message=\"")).output(placeholder("noItemsFoundMessage")).output(literal("\""))).output(expression().output(literal(" alexandria:collection_page_size=\"")).output(placeholder("pageSize")).output(literal("\""))).output(expression().output(literal(" alexandria:collection_item_height=\"")).output(placeholder("itemHeight")).output(literal("\""))).output(expression().output(literal(" alexandria:collection_scrolling_mark=\"")).output(placeholder("scrollingMark")).output(literal("\""))).output(expression().output(literal(" alexandria:collection_navigable=\"")).output(placeholder("navigable")).output(literal("\""))).output(expression().output(literal(" alexandria:collection_selection=\"")).output(placeholder("selection")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "heading"), trigger("specific"))).output(literal(" alexandria:heading_style=\"{width:'")).output(placeholder("width")).output(literal("%',paddingRight:'10px'")).output(expression().output(literal(",")).output(placeholder("paddingLeft")).output(literal(":'10px'"))).output(literal("}\"")).output(expression().output(literal(" alexandria:heading_hidden=\"")).output(placeholder("hidden")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "item"), trigger("specific"))).output(literal(" alexandria:item_style=\"{width:'")).output(placeholder("width")).output(literal("%',paddingRight:'10px'")).output(expression().output(literal(",")).output(placeholder("paddingLeft")).output(literal(":'10px'"))).output(literal("}\"")).output(expression().output(literal(" alexandria:item_hidden=\"")).output(placeholder("hidden")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "spinner"), trigger("specific"))).output(expression().output(literal(" alexandria:spinner_mode=\"")).output(placeholder("mode")).output(literal("\""))).output(expression().output(literal(" alexandria:spinner_size=\"")).output(placeholder("size")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "switch"), trigger("specific"))).output(expression().output(literal(" alexandria:switch_state=\"")).output(placeholder("state")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "toggle"), trigger("specific"))).output(expression().output(literal(" alexandria:toggle_state=\"")).output(placeholder("state")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "splitbutton"), trigger("specific"))).output(expression().output(literal(" alexandria:split_button_options=\"['")).output(placeholder("option").multiple("','")).output(literal("']\""))).output(expression().output(literal(" alexandria:split_button_default_option=\"")).output(placeholder("default")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "export"), trigger("specific"))).output(expression().output(literal(" alexandria:export_from=\"")).output(placeholder("from")).output(literal("\""))).output(expression().output(literal(" alexandria:export_to=\"")).output(placeholder("to")).output(literal("\""))).output(expression().output(literal(" alexandria:export_min=\"")).output(placeholder("min")).output(literal("\""))).output(expression().output(literal(" alexandria:export_max=\"")).output(placeholder("max")).output(literal("\""))).output(expression().output(literal(" alexandria:export_range=\"{min:")).output(placeholder("rangeMin")).output(literal(",max:")).output(placeholder("rangeMax")).output(literal("}\""))).output(expression().output(literal(" alexandria:export_options=\"['")).output(placeholder("option").multiple("','")).output(literal("']\""))));
		rules.add(rule().condition(all(allTypes("properties", "download"), trigger("specific"))).output(expression().output(literal(" alexandria:download_options=\"['")).output(placeholder("option").multiple("','")).output(literal("']\""))));
		rules.add(rule().condition(all(allTypes("properties", "download", "selection"), trigger("specific"))).output(expression().output(literal(" alexandria:download_options=\"['")).output(placeholder("option").multiple("','")).output(literal("']\""))));
		rules.add(rule().condition(all(allTypes("properties", "searchbox"), trigger("specific"))).output(expression().output(literal(" alexandria:search_box_placeholder=\"")).output(placeholder("placeholder")).output(literal("\""))).output(expression().output(literal(" alexandria:search_box_show_count_message=\"")).output(placeholder("showCountMessage")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "slider"), trigger("specific"))).output(expression().output(literal(" alexandria:slider_range=\"{min:")).output(placeholder("min")).output(literal(",max:")).output(placeholder("max")).output(literal("}\""))).output(expression().output(literal(" alexandria:slider_value=\"")).output(placeholder("value")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "grouping"), trigger("specific"))).output(expression().output(literal(" alexandria:grouping_page_size=\"")).output(placeholder("pageSize")).output(literal("\""))).output(expression().output(literal(" alexandria:grouping_placeholder=\"")).output(placeholder("placeholder")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "stepper"), trigger("specific"))).output(literal("   ")).output(expression().output(literal(" alexandria:stepper_orientation=\"")).output(placeholder("orientation", "lowercase")).output(literal("\""))).output(expression().output(literal(" alexandria:stepper_position=\"")).output(placeholder("position", "lowercase")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "frame"), trigger("specific"))).output(literal("   ")).output(expression().output(literal(" alexandria:frame_width=\"")).output(placeholder("width")).output(literal("\""))).output(expression().output(literal(" alexandria:frame_height=\"")).output(placeholder("height")).output(literal("\""))).output(expression().output(literal(" alexandria:frame_url=\"")).output(placeholder("url")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "sorting"), trigger("specific"))).output(expression().output(literal(" alexandria:sorting_mode=\"")).output(placeholder("mode")).output(literal("\""))).output(expression().output(literal(" alexandria:sorting_align=\"")).output(placeholder("align")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "htmlviewer"), trigger("specific"))).output(expression().output(literal(" alexandria:html_viewer_content=\"")).output(placeholder("content", "escapeHtml")).output(literal("\""))));
		rules.add(rule().condition(all(allTypes("properties", "microsite"), trigger("specific"))).output(expression().output(literal(" alexandria:microsite_download_operations=\"['")).output(placeholder("downloadOperation").multiple("','")).output(literal("']\""))));
		rules.add(rule().condition(all(allTypes("properties"), trigger("specific"))));
		rules.add(rule().condition(allTypes("badge")).output(literal("mode=\"")).output(placeholder("mode")).output(literal("\"")).output(expression().output(literal(" value=\"")).output(placeholder("value")).output(literal("\""))).output(expression().output(literal(" max=\"")).output(placeholder("max")).output(literal("\""))).output(expression().output(literal(" showZero=\"")).output(placeholder("showZero")).output(literal("\""))));
		rules.add(rule().condition(allTypes("drawer")).output(literal("position=\"")).output(placeholder("position")).output(literal("\" variant=\"")).output(placeholder("variant")).output(literal("\"")));
		rules.add(rule().condition(allTypes("popover")).output(literal("position=\"")).output(placeholder("position")).output(literal("\"")));
		rules.add(rule().condition(allTypes("code")).output(literal("alexandria:text_value=\"")).output(placeholder("value", "escapeHtml")).output(literal("\"")));
		rules.add(rule().condition(allTypes("highlighted")).output(literal("alexandria:alexandria_highlighted=\"")).output(placeholder("text")).output(literal("\" alexandria:alexandria_highlighted_background=\"")).output(placeholder("background")).output(literal("\"")));
		rules.add(rule().condition(allTypes("actionableMode")).output(placeholder("mode")));
		rules.add(rule().condition(allTypes("histogram")).output(literal("{alwaysVisible:")).output(placeholder("alwaysVisible")).output(literal(",type:\"")).output(placeholder("type")).output(literal("\"}")));
		return rules;
	}

	public String render(Object object) {
		return new io.intino.itrules.Engine(this).render(object);
	}

	public String render(Object object, java.util.Map<String, io.intino.itrules.Formatter> formatters) {
		return new io.intino.itrules.Engine(this).addAll(formatters).render(object);
	}
}