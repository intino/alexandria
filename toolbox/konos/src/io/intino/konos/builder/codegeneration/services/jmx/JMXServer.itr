rule type(jmxserver)
	package $package+ValidPackage;

	import io.intino.alexandria.jmx.JMXServer;
	import io.intino.alexandria.logger.Logger;
	import io.intino.alexandria.core.Box;
	import java.util.HashMap;
	import java.util.Map;

	public class JMX$name+firstUpperCase {

		public JMXServer init(Box box) {
			JMXServer server = new JMXServer(mbClasses(box));
			server.init("intino<<.$path>>");
			return server;
		}

		private Map<String, Object[]~> mbClasses(Box box) {
			Map<String, Object[]~> map = new HashMap<>();
			map.put("$package.jmx.$name+PascalCase", new Object[]{box});
			return map;
		}
	}

rule type(jmx) and type(interface)
	package $package+ValidPackage.jmx;

	import io.intino.alexandria.logger.Logger;
	import io.intino.alexandria.jmx.Description;
	import io.intino.alexandria.jmx.Parameters;

	import java.util.*;
	import java.time.*;

	public interface $name+PascalCase~MBean {

		@Description("Shows information about the available operations")
		@Parameters({})
		java.util.List<String> help();

		$operation+signature...[$NL$NL]
	}

rule type(operation) and trigger(signature)
	@Description("$description")
	@Parameters({$parameter+displayName...[, ]})
	$returnType $name+CamelCase($parameter+withType...[, ]);

rule type(parameter) and trigger(displayName)
	"$name"

rule type(parameter, list) and trigger(withType)
	java.util.List<$type> $name

rule type(parameter) and trigger(withType)
	$type $name


rule type(jmx) and type(implementation)
	package $package+ValidPackage.jmx;

	import io.intino.alexandria.logger.Logger;
	import $package.$box+validName+FirstUpperCase~Box;
	import java.util.*;
	import java.time.*;

	public class $name+CamelCase+validName+firstUpperCase implements $name+validName+firstUpperCase~MBean {

		private final $box+validName+FirstUpperCase~Box box;

		public java.util.List<String> help() {
			List<String> operations = new ArrayList<>();
			operations.addAll(java.util.Arrays.asList(new String[]{$operation+help...[, ]}));
			return operations;
		}

		public $name+validName+firstUpperCase($box+validName+FirstUpperCase~Box box) {
			this.box = box;
		}

		$operation+implementation...[$NL$NL]
	}

rule type(operation) and trigger(implementation)
	public $returnType $name+CamelCase+validName+firstLowerCase($parameter+withType...[, ]) {
		try {
		$package+ValidPackage.actions.$action+PascalCase~Action action = new $package+ValidPackage.actions.$action+PascalCase~Action();
		action.box = box;
		<<$parameter+assign...[$NL]>>
		<<$returnType+return >>action.execute();
		} catch (Throwable e) {
			Logger.error(e);
			throw e;
		}
	}

rule type(operation) and trigger(help)
	"$returnType $name+CamelCase+validName+firstLowerCase($parameter+withType...[, ])<<: $description>>"


rule type(parameter) and trigger(assign)
	action.$name = $name;

rule type(returnType) and attribute(value,void) and trigger(return)

rule type(returnType) and trigger(return)
	return

rule type(returnType, list) and trigger(returnType)
	java.util.List<$value>

rule type(returnType) and trigger(returnType)
	$value

rule trigger(quoted)
	"$value"
