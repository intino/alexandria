rule type(display, exposed)
	package $package+validPackage.ui.displays.notifiers;

	import io.intino.alexandria.exceptions.*;
	import $package+validPackage.*;

	public class $name+FirstUpperCase~ProxyNotifier extends io.intino.alexandria.ui.displays.notifiers.ProxyDisplayNotifier  {
		public $name+FirstUpperCase~ProxyNotifier(io.intino.alexandria.ui.displays.Display display, io.intino.alexandria.http.pushservice.MessageCarrier carrier) {
			super(display, carrier);
		}
	}

rule type(display)
	package $package+validPackage.ui.displays.notifiers;

	import io.intino.alexandria.exceptions.*;
	import $package+validPackage.*;
	$schemaImport

	public class $name+FirstUpperCase~Notifier extends $parentType {

		public $name+FirstUpperCase~Notifier(io.intino.alexandria.ui.displays.Display display, io.intino.alexandria.http.pushservice.MessageCarrier carrier) {
			super(display, carrier);
		}

		<<$notification...[$NL$NL]>>
		<<$event...[$NL$NL]>>
	}

rule attribute(extensionOf) and trigger(parentType)
	$parent+firstUpperCase~Notifier

rule trigger(parentType)
	io.intino.alexandria.ui.displays.notifiers.$value+FirstUpperCase~Notifier

rule type(notification) and trigger(notification)
	public void $name+firstLowercase(<<$parameter value>>) {
		put<<$target>>("$name+firstLowercase"<<, "v", $parameter+call>>);
	}

rule type(event)
	public void $name+firstLowerCase() {
		putToDisplay("$name+firstLowerCase");
	}

rule type(parameter) and trigger(call)
	value

rule type(list) and trigger(parameter)
	java.util.List<$value>

rule trigger(parameter)
	$value

rule type(schemaImport)
	import $package.schemas.*;

rule attribute(this, All) and trigger(target)
	ToAll

rule attribute(this, Display) and trigger(target)
	ToDisplay

rule attribute(this, Client) and trigger(target)

rule type(proxyMessage)
	public void notifyProxyMessage(String name) {
		putToDisplay("notifyProxyMessage", "v", name);
	}
