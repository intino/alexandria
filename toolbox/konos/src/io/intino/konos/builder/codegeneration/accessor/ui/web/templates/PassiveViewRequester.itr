rule type(display)
	$import

	export default class $name+firstUpperCase$proxy~Requester extends $parentType {
		constructor(element) {
			super(element);
		};
		<<$request...[$NL]>>
		didMount = () => {
			this.pushService.send({ op: "didMount", s: "$name+lowerCase", d: this.element.shortId(), o: this.element.props.owner(), c: this.element.props.context()}, this.element.ownerUnit());
		};
	}

rule attribute(extensionOf) and trigger(import)
	import $parent+firstUpperCase~Requester from "./$parent+firstUpperCase~Requester"

rule attribute(exposed) and trigger(import)
	import Requester from "alexandria-ui-elements/gen/displays/requesters/ProxyDisplayRequester";

rule trigger(import)
	import Requester from "./Requester";

rule attribute(exposed) and trigger(proxy)
	Proxy

rule trigger(proxy)

rule attribute(extensionOf) and trigger(parentType)
	$parent+firstUpperCase~Requester

rule trigger(parentType)
	Requester

rule type(parameter) and trigger(request)
	$name = function(value<<, $progressCallback>>) {
		if (this.addToHistory(value)) return;
		$method({ app: this.element.context, op: "$name", s: "$display+lowercase", d: this.element.shortId(), o: this.element.props.owner(), c: this.element.props.context(), v: $parameter}, this.element.ownerUnit()<<, undefined, $progressCallback>>);
	}

rule trigger(request)
	$name = (<<$parameterSignature>><<, $progressCallback>>) => {
		if (this.addToHistory(<<$parameterSignature>>)) return;
		$method({ app: this.element.context, op: "$name", s: "$display+lowercase", d: this.element.shortId(), o: this.element.props.owner(), c: this.element.props.context()<<, v: $parameter>>}, this.element.ownerUnit()<<, undefined, $progressCallback>>);
	};

rule type(object) and trigger(parameter)
	encodeURIComponent(JSON.stringify(value))

rule type(list, file) and trigger(parameter)
	value

rule type(list) and trigger(parameter)
	encodeURIComponent(JSON.stringify(value))

rule type(file) and trigger(parameter)
	value

rule trigger(parameter)
	encodeURIComponent(value)

rule attribute(upload) and trigger(method)
	this.fileService.upload

rule attribute(download) and trigger(method)
	this.fileService.download

rule trigger(method)
	this.pushService.send