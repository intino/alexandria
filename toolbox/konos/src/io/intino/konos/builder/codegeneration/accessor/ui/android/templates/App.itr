rule type(manifest)
    <?xml version="1.0" encoding="utf-8"?>
    <manifest xmlns:android="http://schemas.android.com/apk/res/android">

        <uses-permission android:name="android.permission.INTERNET" />
        <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
        <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
        <uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES"/>

        <application
            android:label="@string/app_name"
            android:allowBackup="false"
            android:supportsRtl="true"
            android:theme="@style/AppTheme"
            android:usesCleartextTraffic="true"
            android:requestLegacyExternalStorage="true">

            $resource...[$NL]

            <provider
                android:name="androidx.core.content.FileProvider"
                android:authorities="$${applicationId}.provider"
                android:exported="false"
                android:grantUriPermissions="true">
                <meta-data
                    android:name="android.support.FILE_PROVIDER_PATHS"
                    android:resource="@xml/provider_paths" />
            </provider>
        </application>

    </manifest>

rule type(resource, main)
    <activity
        android:name=".pages.$name+PascalCase~Activity"
        android:exported="true"
        android:windowSoftInputMode="adjustNothing">
        <intent-filter>
            <action android:name="android.intent.action.MAIN" />
            <category android:name="android.intent.category.LAUNCHER" />
        </intent-filter>
    </activity>

rule type(resource)
    <activity
        android:name=".pages.$name+PascalCase~Activity"
        android:exported="true"
        android:windowSoftInputMode="adjustNothing">
    </activity>

rule type(gradle, settings)
    enableFeaturePreview("TYPESAFE_PROJECT_ACCESSORS")

    pluginManagement {
        repositories {
            google()
            gradlePluginPortal()
            mavenCentral()
        }
    }

    dependencyResolutionManagement {
        repositories {
            google()
            mavenCentral()
        }
    }

    rootProject.name = "$project"
    include(":android")
    include(":android-library")
    include(":shared")

rule type(gradle, android)
    plugins {
        alias(libs.plugins.androidApplication)
        alias(libs.plugins.kotlinAndroid)
    }

    android {
        namespace = "$package.mobile.android"
        compileSdk = 34
        defaultConfig {
            applicationId = "$package.mobile.android"
            minSdk = 32
            targetSdk = 34
            versionCode = 1
            versionName = "$version"
            setProperty("archivesBaseName", "$project-$version")
        }
    }

    dependencies {
        implementation(projects.androidLibrary)
        implementation(projects.shared)
    }

rule type(gradle, androidLibrary)
    plugins {
        alias(libs.plugins.androidLibrary)
        alias(libs.plugins.kotlinAndroid)
        alias(libs.plugins.compose.compiler)
    }

    android {
        namespace = "$package.mobile.android"
        compileSdk = 34
        defaultConfig {
            minSdk = 32
            version = "$version"
            setProperty("archivesBaseName", "$project-$version")
        }
        buildFeatures {
            compose = true
        }
        packaging {
            resources {
                excludes += "/META-INF/{AL2.0,LGPL2.1}"
            }
        }
        buildTypes {
            getByName("release") {
                isMinifyEnabled = false
            }
        }
        compileOptions {
            sourceCompatibility = JavaVersion.VERSION_18
            targetCompatibility = JavaVersion.VERSION_18
        }
        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_18.getMajorVersion()
        }
    }

    dependencies {
        implementation(projects.shared)
        implementation(libs.android.material)
        implementation(libs.android.flexbox)
        implementation(libs.kotlinx.datetime)
        implementation(libs.androidx.activity.compose)
        implementation(libs.androidx.databinding)
        implementation(libs.caverock)
        implementation(libs.http)
        implementation(libs.android.maps)
        implementation(libs.material.icons)
        <<implementation(files("./libs/alexandria-$alexandriaLibVersion~-release.aar"))>>
        <<implementation(files("./libs/alexandria-shared-$alexandriaLibVersion~-release.aar"))>>
    }

rule type(gradle, shared)
    plugins {
        alias(libs.plugins.kotlinMultiplatform)
        alias(libs.plugins.androidLibrary)
        alias(libs.plugins.kotlinSerialization)
    }

    kotlin {
        android()

        listOf(
            iosX64(),
            iosArm64(),
            iosSimulatorArm64()
        ).forEach {
            it.binaries.framework {
                baseName = "shared"
                isStatic = true
            }
        }

        sourceSets {
            commonMain.dependencies {
                implementation(libs.kotlinx.serialization.json)
                implementation(libs.kotlinx.coroutines.core)
                implementation(libs.kotlin.stdlib)
                implementation(libs.kotlinx.datetime)
            }
            androidMain.dependencies {
                implementation(libs.android.material)
                implementation(libs.android.flexbox)
                implementation(libs.http)
                implementation(libs.volley)
            }
        }
    }

    android {
        namespace = "$package.mobile"
        compileSdk = 34
        defaultConfig {
            minSdk = 24
            version = "$version"
            setProperty("archivesBaseName", "$project-~shared-$version")
        }
        compileOptions {
            sourceCompatibility = JavaVersion.VERSION_18
            targetCompatibility = JavaVersion.VERSION_18
        }
    }

rule type(properties)
    <resources>
        $component...[$NL]
    </resources>

rule type(strings)
    <?xml version="1.0" encoding="utf-8"?>
    <resources>
        <string name="app_name">$project</string>
    </resources>

rule type(component)
    <declare-styleable name="$name+firstUpperCase"<< parent="$parent+firstUpperCase">>~>
        $attribute...[$NL]
    </declare-styleable>

rule type(attribute, root)
    <attr name="$name+lowerCase" format="string" />

rule type(attribute)
    <attr name="$component+camelCaseToSnakeCase+lowerCase~_$name+lowerCase" format="string" />
