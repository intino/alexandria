rule type(command)
	package $package+validPackage.actions;

	import io.intino.alexandria.cli.command.MessageProperties;
    import io.intino.alexandria.cli.response.Text;<<
    $response+import>>
    import $package+validPackage.$box+FirstUpperCase~Box;

    public class $name+firstUppercase~Action {
    	public $box+FirstUpperCase~Box box;
    	public MessageProperties properties;
    	public String state;
    	$parameter+declaration

    	public $response+type execute() {
    		return null;
    	}

        <<$response+method...[$NL]>>
    }

rule type(condition)
    public io.intino.alexandria.cli.response.Text when$value+firstUpperCase() {
        return null;
    }

rule type(parameter, list)
    public List<String> $name;

rule type(parameter)
    public String $name;

rule type(response, multiline) and trigger(type)
    MultiLineProvider

rule type(response, attachment) and trigger(type)
    io.intino.alexandria.Resource

rule type(response, confirmation) and trigger(type)
    io.intino.alexandria.cli.response.QuestionProvider

rule type(response) and trigger(type)
    String

rule type(response, multiline) and trigger(import)
    import $package+validPackage.cli.commands.$command+firstUppercase~Command.MultiLineProvider;

rule type(response) and trigger(type)
    io.intino.alexandria.cli.response.Text

rule type(response, confirmation) and trigger(method)
    $option...[$NL]

rule type(response) and trigger(method)

rule type(option)
    public io.intino.alexandria.cli.response.Text when$value+firstUppercase() {
        return null;
    }
