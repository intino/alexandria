rule type(exposedDisplay, js)
import React from "react";
import { MuiThemeProvider, withStyles } from '@material-ui/core/styles';
import { IconButton } from "@material-ui/core";
import { Close } from '@material-ui/icons';
import { SnackbarProvider, useSnackbar } from "notistack";
import CssBaseline from '@material-ui/core/CssBaseline';
import Theme from '../../gen/Theme';
import Page from "alexandria-ui-elements/src/displays/Page";
import ConnectionChecker from "alexandria-ui-elements/src/displays/ConnectionChecker";
import $name+firstUpperCase from "$origin+origin/displays/templates/$name+firstUpperCase";

let theme = Theme.create();
const styles = theme => ({});

const $name+firstUpperCase~PageDismissAction = ({ id }) => {
	const { closeSnackbar } = useSnackbar();
	return (<IconButton color="inherit" onClick={() => closeSnackbar(id)}><Close fontSize="small" /></IconButton>);
}

export default class $name+firstUpperCase~Page extends Page {
	render() {
		const { classes } = this.props;
        theme = Theme.create(this.state.appMode);
        theme.onChangeMode(mode => this.setState({appMode:mode}));
		return (
			<MuiThemeProvider theme={theme}>
				<SnackbarProvider maxSnack={3} action={key => <$name+firstUpperCase~PageDismissAction id={key}/>}>
					<CssBaseline />
					<$name+firstUpperCase id="$name+firstLowerCase"></$name+firstUpperCase>
					<ConnectionChecker></ConnectionChecker>
				</SnackbarProvider>
			</MuiThemeProvider>
		);
	}
}

rule type(resource, js)
import React from "react";
import { MuiThemeProvider, withStyles } from '@material-ui/core/styles';
import { IconButton } from "@material-ui/core";
import { Close } from '@material-ui/icons';
import { SnackbarProvider, useSnackbar } from "notistack";
import CssBaseline from '@material-ui/core/CssBaseline';
import Theme from '../../gen/Theme';
import Page from "alexandria-ui-elements/src/displays/Page";
import ConnectionChecker from "alexandria-ui-elements/src/displays/ConnectionChecker";
import $pageDisplay+firstUpperCase from "$pageDisplayOrigin+origin/displays/$pageDisplayType+firstLowerCase~s/$pageDisplay+firstUpperCase";
$exposedImport...[$NL]

let theme = Theme.create();
const styles = theme => ({});

const $pageDisplay+firstUpperCase~PageDismissAction = ({ id }) => {
	const { closeSnackbar } = useSnackbar();
	return (<IconButton color="inherit" onClick={() => closeSnackbar(id)}><Close fontSize="small" /></IconButton>);
}

export default class $pageDisplay+firstUpperCase~Page extends Page {
	render() {
		const { classes } = this.props;
        theme = Theme.create(this.state.appMode);
        theme.onChangeMode(mode => this.setState({appMode:mode}));
		return (
			<MuiThemeProvider theme={theme}>
				<SnackbarProvider maxSnack={3} action={key => <$pageDisplay+firstUpperCase~PageDismissAction id={key}/>}>
					<CssBaseline />
					<$pageDisplay+firstUpperCase id="$pageDisplayId"></$pageDisplay+firstUpperCase>
					<ConnectionChecker></ConnectionChecker>
				</SnackbarProvider>
			</MuiThemeProvider>
		);
	}
}

rule type(exposedDisplay, html)
	<!DOCTYPE html>
	<html>
		<head>
			<title>$$title</title>

			<meta charset="utf-8"/>
			<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
			<meta name="viewport" content="width=device-width, minimum-scale=1.0, initial-scale=1, user-scalable=yes"/>

			<link rel="icon" href="$$favicon">

			<script src="$$url/res/js/jquery-3.6.1.min.js"></script>
			<script src="$$url/res/js/materialize-1.0.0.min.js"></script>

			<style nonce="main_style">
				html, body {
					min-height: 100vh;
					height: 100%;
				}
				.page {
					display: table;
					height: 100%;
					width: 100%;
				}
			</style>
		</head>

		<body>
			<div class="page" id="$name+firstUpperCase"></div>
			<script nonce="main_script">
				document.configuration = {};
				document.configuration.googleApiKey = "$$googleApiKey";
				document.configuration.pushConnections = "$$pushConnections".split(",");
				document.configuration.clientId = "$$client";
				document.configuration.language = "$$language";
				document.configuration.url = "$$url";
				document.configuration.baseUrl = "$$baseUrl";
				document.configuration.baseUrls = "$$baseUrls".split(",");
				document.configuration.basePath = "$$basePath";
			</script>
		</body>
	</html>

rule type(resource, html)
	<!DOCTYPE html>
	<html>
		<head>
			<title>$$title</title>

			<meta charset="utf-8"/>
			<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
			<meta name="viewport" content="width=device-width, minimum-scale=1.0, initial-scale=1, user-scalable=yes"/>

			<link rel="icon" href="$$favicon">

			<script src="$$url/res/js/jquery-3.6.1.min.js"></script>
			<script src="$$url/res/js/materialize-1.0.0.min.js"></script>

			<style nonce="main_style">
				html, body {
					min-height: 100vh;
					height: 100%;
				}
				.page {
					display: table;
					height: 100%;
					width: 100%;
				}
			</style>
		</head>

		<body>
			<div class="page" id="$pageDisplay+firstUpperCase"></div>
			<script nonce="main_script">
				document.configuration = {};
				document.configuration.googleApiKey = "$$googleApiKey";
				document.configuration.pushConnections = "$$pushConnections".split(",");
				document.configuration.clientId = "$$client";
				document.configuration.language = "$$language";
				document.configuration.url = "$$url";
				document.configuration.baseUrl = "$$baseUrl";
				document.configuration.baseUrls = "$$baseUrls".split(",");
				document.configuration.basePath = "$$basePath";
			</script>
		</body>
	</html>

rule attribute(hasAbstract) and trigger(origin)
	../../src

rule attribute(decorated) and trigger(origin)
	../../gen

rule trigger(origin)
	..

rule type(exposedImport)
	import $service+firstUpperCase~ExposedDisplays from '$elements/gen/ExposedDisplays';
