rule type(accessor)
	package $package+ValidPackage;

	import java.util.List;
	import java.util.ArrayList;
	import io.intino.alexandria.exceptions.*;
	import io.intino.alexandria.jmx.JMXClient;
	import $package+ValidPackage.jmx.$name+validName+firstUpperCase~MBean;

	$schemaImport

	public class $name+validName+firstUpperCase~JMXAccessor {

		private final JMXClient.JMXConnection connection;
		private $name+validName+firstUpperCase~MBean bean;

		public $name+validName+firstUpperCase~JMXAccessor(String url, int port) throws java.io.IOException {
			JMXClient server = new JMXClient(url, port);
			connection = server.connect();
			bean = connection.mBean($name+validName+firstUpperCase~MBean.class);
		}

		public void closeJMXConnection() {
			connection.close();
		}

		$operation...[$NL$NL]
	}

rule type(operation)
	public $returnType+firstUpperCase+ReturnTypeFormatter $name+validName+firstLowerCase($parameter+signature...[, ]) {
		return bean != null ? bean.$name+validName+firstLowerCase($parameter+name...[, ]) : null;
	}

rule type(parameter) and trigger(signature)
	$type $name+validName+firstLowerCase

rule type(parameter) and trigger(name)
	$name+validName+firstLowerCase

rule type(schemaImport) and trigger(schemaImport)
	import $package.schemas.*;
