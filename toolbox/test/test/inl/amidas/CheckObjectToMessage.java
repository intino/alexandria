package inl.amidas;

import inl.amidas.schemas.Solicitud;
import io.intino.alexandria.Json;
import io.intino.alexandria.inl.Inl;
import io.intino.alexandria.inl.Message;
import org.junit.Assert;
import org.junit.Test;

import java.io.IOException;
import java.util.UUID;

public class CheckObjectToMessage {


	static String jsonSolicitud = "{\"id\":\"9a1e56aa-d9f1-48d3-be3a-3c6d71056b02\",\"asunto\":\"Presentación a subvención del SCE\",\"expone\":\"Solicito el certificado de centro para poder acceder a la subvención del SCE\",\"solicita\":\"Certificado de centro\",\"modoPresentacion\":\"\",\"datosDelSolicitante\":{\"tipoDeDocumento\":\"NIF\",\"numeroDeDocumento\":\"34326787L\",\"primerApellido\":\"Caballero\",\"segundoApellido\":\"Ramírez\",\"nombre\":\"Mario\",\"razonSocial\":\"\",\"enCalidadDe\":\"Interesado\"},\"datosDelRepresentante\":{\"tipoDeDocumento\":\"\",\"numeroDeDocumento\":\"\",\"primerApellido\":\"\",\"segundoApellido\":\"\",\"nombre\":\"\",\"razonSocial\":\"\"},\"solicitudDocumentoList\":[{\"descripcion\":\"sssdsds\",\"fichero\":{\"id\":\"" + UUID.randomUUID().toString() + ".png\",\"type\":\"png\",\"data\":\"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\"}}]}";

	@Test
	public void solicitudToMessage() throws IOException {
		Solicitud solicitud = Json.fromString(jsonSolicitud, Solicitud.class);
		Message message = Inl.toMessage(solicitud);
		Assert.assertEquals(message.components().get(0).attachments().size(), 1);
	}
}
